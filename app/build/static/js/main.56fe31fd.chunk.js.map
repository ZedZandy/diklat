{"version":3,"sources":["serviceWorker.js","pages/404.js","components/header.js","helpers/index.js","pages/home.js","components/sidebar.js","pages/biodata.js","pages/pembayaran.js","pages/konfirmasi.js","pages/login.js","admin/pendaftaranDetail.js","admin/pendaftaran.js","admin/pelatihan.js","admin/jadwal.js","App.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","NotFound","props","className","to","dispatch","useDispatch","auth","useSelector","state","Navbar","expand","Container","src","height","alt","Toggle","aria-controls","Collapse","id","user","Nav","onClick","type","formatRibuan","x","toString","replace","REST_URL","process","history","useHistory","useState","pelatihan","setPelatihan","kelas","setKelas","jadwal","setJadwal","useEffect","a","axios","get","data","fetchKelas","findJadwal","nama","Row","Col","xs","sm","Card","Header","Body","Form","Control","as","onChange","e","filter","r","target","value","disabled","map","k","i","key","deskripsi","biaya","waktu","gambar","prasyarat","syarat","length","Table","responsive","size","borderless","kls","hari","tanggal","Button","variant","push","jadwalTerpilih","pelatihanTerpilih","biodataPeserta","email","phone","Papa","parsePromise","url","Promise","complete","error","parse","header","download","dynamicTyping","agama","defBio","biodata","setBiodata","wilayah","setWilayah","requirement","setRequirement","prov","kab","kec","kel","d","enable","includes","provinsi","kabupaten","kecamatan","kelurahan","fetchWilayah","cekEmail","Object","assign","name","onChangeWilayah","getOptions","submitBiodata","preventDefault","bio","toast","post","message","success","onChangeFileUpload","files","formData","FormData","append","config","headers","status","filename","onSubmit","Group","Label","column","placeholder","defaultValue","required","ktp","nisn","Check","inline","label","checked","gender","tempatLahir","dateFormat","selected","tanggalLahir","dayjs","date","format","agm","warga","alamat","options","getOptionLabel","option","getOptionValue","rt","rw","kodepos","ayah","ibu","req","ri","md","File","custom","lengkap","nanoid","customAlphabet","daftarBank","rek","pendaftaran","bank","setBank","onBayar","payload","kode","peserta","bankTerpilih","style","width","navigator","clipboard","writeText","ListGroup","b","Item","Footer","block","konfirmasi","setKonfirmasi","statusPembayaran","setStatusPembayaran","sertifikatHtml","setSertifikat","onChangeKonfirmasi","onKonfirmasi","bukti","onClose","onCekStatus","onCekSertifikat","kodeSertifikat","kodePelaut","params","body","keys","encodeURIComponent","join","fetch","method","mode","response","json","result","html","hasile","split","test","RegExp","test1","slice","pop","test2","console","lg","color","sp","buktiPembayaran","cekPembayaran","cekBiodata","dangerouslySetInnerHTML","__html","username","password","detail","show","onHide","enlarge","setEnlarge","confirmed","setConfirmed","fetchData","showImage","Modal","closeButton","Title","Image","rounded","overflow","setShow","setDetail","setData","detailData","index","columns","accessor","Cell","minRows","getTrProps","rowInfo","cursor","showModal","entries","dt","JSON","stringify","onDelete","confirm","statusText","isMulti","isSearchable","opt","days","deleteData","delete","aktif","tgl","injectTimes","timeIntervals","readOnly","AppRoute","Component","component","rest","render","AdminRoute","pathname","from","AuthRouter","exact","path","Home","Biodata","Pembayaran","Konfirmasi","Login","Pelatihan","Jadwal","Admin","React","INITIAL_STATE","persistedReducer","persistReducer","storage","middleware","composeWithDevTools","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","loading","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.56fe31fd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NotFound = (props) => {\n  return (\n    <div className='text-center text-white full-height'>\n      <div className='notFound'>\n        <h1>404 - Not Found</h1>\n        <Link to='/' className='btn btn-warning'>Kembali ke halaman utama</Link>\n      </div>\n    </div>\n  )\n}\nexport default NotFound\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Container, Navbar, Nav } from 'react-bootstrap'\n\nexport default () => {\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' })\n  }\n  return (\n    <div>\n      <Navbar expand='lg' className='navbar-dark bg-primary'>\n        <Container>\n          <Link className='navbar-brand' to='/'><img src='/img/logo.png' height='50' alt='' /></Link>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            {auth && auth.user ?\n              <Nav className='ml-auto'>\n                <Link to='/admin' className='nav-link'>Peserta</Link>\n                <Link to='/admin/pelatihan' className='nav-link'>Pelatihan</Link>\n                <Link to='/admin/jadwal' className='nav-link'>Jadwal</Link>\n                <Link to='#' className='nav-link' onClick={logout}>Logout</Link>\n              </Nav>\n              :\n              <Nav className='ml-auto'>\n                <Link to='/' className='nav-link'>Pendaftaran</Link>\n                <Link to='/konfirmasi' className='nav-link'>Konfirmasi</Link>\n                <Link to='/login' className='nav-link'>Login</Link>\n              </Nav>\n            }\n\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <div className='bg-warning py-1'>\n        <div className='container text-center'>\n          <small>Kami membatalkan beberapa jadwal pelatihan untuk mengantisipasi COVID-19. Kamu tetap bisa mendaftar pelatihan secara online.</small>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const formatRibuan = (x) => {\n  return x ? x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\") : x\n}","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { Container, Row, Col, Card, Button, Form, Table } from 'react-bootstrap'\nimport { formatRibuan } from 'helpers/index'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [pelatihan, setPelatihan] = useState({})\n  const [kelas, setKelas] = useState([])\n  const [jadwal, setJadwal] = useState([])\n\n  useEffect(() => { // componentDidMount\n    const fetchKelas = async () => {\n      let { data } = await axios.get(`${REST_URL}/pelatihan`)\n      setKelas(data)\n    }\n    fetchKelas()\n  }, [])\n  const onPilihProgram = (e) => {\n    const data = kelas.filter(r => r.id.toString() === e.target.value)[0]\n    setPelatihan(data)\n    dispatch({ type: 'SET_PELATIHAN', data })\n    findJadwal(data.nama)\n  }\n  const findJadwal = async (nama) => {\n    let { data } = await axios.get(`${REST_URL}/jadwal?pelatihan=${nama}`)\n    setJadwal(data)\n  }\n  const nextStep = (data) => {\n    dispatch({ type: 'SET_JADWAL', data })\n    history.push('/biodata')\n  }\n  return (\n    <div className='mt-4'>\n      <Container>\n        <Row>\n          <Col xs={12} sm={6}>\n            <Card className='p-0' >\n              <Card.Header className='bg-warning text-center'>Pilih Program Pelatihan</Card.Header>\n              <Card.Body>\n                <Form.Control as='select' onChange={onPilihProgram} value={pelatihan.id || \"\"}>\n                  <option value='' disabled>--Pilih program</option>\n                  {kelas.map((k, i) => <option key={i} value={k.id}>({k.nama}) {k.deskripsi}</option>)}\n                </Form.Control>\n                <br />\n                {pelatihan && pelatihan.nama ?\n                  <div>\n                    <label className='primary'>Biaya</label>: <b className='text-primary'>{formatRibuan(pelatihan.biaya)}</b> <br />\n                    <label className='primary'>Waktu</label>: {pelatihan.waktu} hari <br />\n                    <img src={pelatihan.gambar ? `${REST_URL}/upload/pelatihan/${pelatihan.gambar}` : `/img/no-img.png`} className='rounded img-fluid' alt='bst' />\n                    <h5 className='mt-4'>Persyaratan:</h5>\n                    <ul className='p-2 ml-4'>\n                      <li>Usia minimal 16 thn </li>\n                      {pelatihan.prasyarat.map(syarat => {\n                        if (syarat == 'KTP') {\n                          return <li> FC KTP (2lbr) </li>\n                        } else if (syarat == 'SKES') {\n                          return <li>Surat Keterangan Sehat dari Rumah Sakit yang ditunjuk oleh Dirjen Hubla</li>\n                        } else if (syarat == 'IJAZAH') {\n                          return <li>FC Ijazah Umum legalisir (2lbr)</li>\n                        } else if (syarat == 'AKTE') {\n                          return <li>FC Akta kelahiran (2lbr)</li>\n                        } else if (syarat == 'FOTO') {\n                          return <li>Foto warna terbaru ukuran 3×4 (2lbr)</li>\n                        } else {\n                          return <li>FC sertifikat {syarat} legalisir (2lbr)</li>\n                        }\n                      })}\n                    </ul>\n                  </div> : null\n                }\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6}>\n            {jadwal.length ?\n              <Card className='p-0'>\n                <Card.Header className='bg-warning text-center'>Pilih Waktu Pelatihan</Card.Header>\n                <Card.Body>\n                  <Table responsive='sm' size='md' borderless>\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>Kelas</th>\n                        <th>Hari</th>\n                        <th>Tanggal</th>\n                        <th />\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {jadwal.map((kls, i) => (\n                        <tr key={i}>\n                          <td>{i + 1}</td>\n                          <td>{kls.pelatihan}</td>\n                          <td>{kls.hari}</td>\n                          <td>{kls.tanggal}</td>\n                          <td><Button size='sm' variant='primary' onClick={(e) => nextStep(kls)}>Pilih</Button></td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card> : null}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Card } from 'react-bootstrap'\n\nimport { formatRibuan } from 'helpers/index'\n\nexport default () => {\n  const jadwalTerpilih = useSelector(state => state.jadwalTerpilih)\n  const pelatihanTerpilih = useSelector(state => state.pelatihanTerpilih)\n  const biodataPeserta = useSelector(state => state.biodataPeserta)\n\n  return (\n    <div className='p-0 '>\n      {pelatihanTerpilih.id && jadwalTerpilih.id ?\n        <Card>\n          <Card.Body>\n            <span>Program yang telah anda pilih:</span>\n            <hr />\n            <label>Kelas: </label><span className='float-right text-primary'>{pelatihanTerpilih.nama}</span> <br />\n            <label>Biaya: </label><span className='float-right text-primary'>{formatRibuan(pelatihanTerpilih.biaya) || 0}</span> <br />\n            <label>Waktu: </label><span className='float-right text-primary'>{jadwalTerpilih.tanggal}</span> <br />\n          </Card.Body>\n        </Card>\n        : null}\n      {biodataPeserta.id ?\n        <Card className=\"mt-4 mb-4\">\n          <Card.Body>\n            <span>Detail Peserta:</span>\n            <hr />\n            <label>Nama: </label><span className='float-right text-primary capitalize'>{biodataPeserta.nama || ''}</span> <br />\n            <label>Email: </label><span className='float-right text-primary'>{biodataPeserta.email || ''}</span> <br />\n            <label>Handphone: </label><span className='float-right text-primary'>{biodataPeserta.phone || ''}</span> <br />\n          </Card.Body>\n        </Card>\n        : null}\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Container, Row, Col, Card, Button, Form } from 'react-bootstrap'\nimport DatePicker from 'react-datepicker'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\nimport { IoMdBook, IoMdCloudUpload, IoIosCloseCircleOutline, IoIosCheckmarkCircleOutline } from 'react-icons/io'\nimport Papa from 'papaparse'\nimport dayjs from 'dayjs'\nimport Sidebar from 'components/sidebar'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nPapa.parsePromise = function (url) {\n  return new Promise(function (complete, error) {\n    Papa.parse(url, {\n      header: true,\n      download: true,\n      dynamicTyping: true,\n      complete,\n      error\n    })\n  })\n}\nconst agama = ['islam', 'katholik', 'protestan', 'hindu', 'budha', 'khong hu chu']\nconst defBio = {\n  // email: 'john.doe@gmail.com',\n  // phone: '1028319283',\n  // ktp: '8129381923',\n  // nisn: '9123819283',\n  // nama: 'jack hun',\n  // gender: 'pria',\n  // warga: 'wni',\n  // agama: 'katholik',\n  // tempatLahir: 'surabaya',\n  // tanggalLahir: '1988-02-23',\n  // alamat: 'jl kenagan no.21',\n  // ayah: 'joe',\n  // ibu: 'melisa',\n}\n\nexport default () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const pelatihanTerpilih = useSelector(state => state.pelatihanTerpilih)\n  const [biodata, setBiodata] = useState(defBio)\n  const [wilayah, setWilayah] = useState([])\n  const [requirement, setRequirement] = useState([])\n\n  useEffect(() => {\n    if (!pelatihanTerpilih.id) {\n      return history.push('/')\n    }\n    dispatch({ type: 'SET_BIODATA', data: {} })\n    const fetchWilayah = async () => {\n      const prov = await Papa.parsePromise('/wilayah/provinsi.csv')\n      const kab = await Papa.parsePromise('/wilayah/kabupaten.csv')\n      const kec = await Papa.parsePromise('/wilayah/kecamatan.csv')\n      const kel = await Papa.parsePromise('/wilayah/kelurahan.csv')\n      let { data } = await axios.get('/requirement.json')\n      if (pelatihanTerpilih.id) {\n        for (const d of data) {\n          d.enable = pelatihanTerpilih.prasyarat.includes(d.id)\n        }\n      }\n      setRequirement(data)\n      setWilayah({ provinsi: prov.data, kabupaten: kab.data, kecamatan: kec.data, kelurahan: kel.data })\n    }\n    fetchWilayah()\n  }, [dispatch, history, pelatihanTerpilih])\n  const cekEmail = async () => {\n    if (biodata.email) {\n      let { data } = await axios.get(`${REST_URL}/peserta?email=${biodata.email}`)\n      if (data.length) {\n        data[0].provinsi = null\n        data[0].kabupaten = null\n        data[0].kecamatan = null\n        data[0].kelurahan = null\n        setBiodata(Object.assign({}, data[0]))\n      }\n    } else {\n      setBiodata(Object.assign({}))\n    }\n  }\n  const onChange = async (e) => {\n    const { name, value } = e.target\n    biodata[name] = value\n    setBiodata(Object.assign({}, biodata))\n  }\n  const onChangeDatepicker = (key, value) => {\n    biodata[key] = dayjs(value).format('YYYY-MM-DD')\n    setBiodata(Object.assign({}, biodata))\n  }\n  const onChangeWilayah = (key, value) => {\n    biodata[key] = value\n    setBiodata(Object.assign({}, biodata))\n  }\n  const getOptions = (key, value) => {\n    if (key === 'kabupaten') {\n      return wilayah.kabupaten.filter(r => r.provinsi === value.id)\n    }\n    if (key === 'kecamatan') {\n      return wilayah.kecamatan.filter(r => r.kabupaten === value.id)\n    }\n    if (key === 'kelurahan') {\n      return wilayah.kelurahan.filter(r => r.kecamatan === value.id)\n    }\n    return []\n  }\n\n  const submitBiodata = async (e) => {\n    e.preventDefault()\n    const bio = Object.assign({}, biodata)\n\n    if (!biodata.provinsi) { return toast.error('Provinsi harus diisi') }\n    if (!biodata.kabupaten) { return toast.error('Kabupaten harus diisi') }\n    if (!biodata.kecamatan) { return toast.error('Kecamatan harus diisi') }\n    if (!biodata.kelurahan) { return toast.error('Kelurahan harus diisi') }\n\n    bio.provinsi = biodata.provinsi.name\n    bio.kabupaten = biodata.kabupaten.name\n    bio.kecamatan = biodata.kecamatan.name\n    bio.kelurahan = biodata.kelurahan.name\n\n    let { data } = await axios.post(`${REST_URL}/peserta`, bio)\n    dispatch({ type: 'SET_BIODATA', data: biodata })\n    const message = data.message === 'CREATED' ? 'ditambahkan' : 'diperbahrui'\n    toast.success(`Data telah berhasil ${message}.`)\n  }\n  const onChangeFileUpload = async (e) => {\n    const { files, name } = e.target\n    setBiodata(Object.assign({}, { ...biodata, [name]: null }))\n    if (biodata.id && files[0]) {\n      const formData = new FormData()\n      formData.append('file', files[0])\n      formData.append('id', biodata.id)\n      formData.append('name', name)\n      const config = { headers: { 'content-type': 'multipart/form-data' } }\n      const { status, data } = await axios.post(`${REST_URL}/peserta/upload`, formData, config)\n      if (status === 200) {\n        setBiodata(Object.assign({}, { ...biodata, [name]: data.filename }))\n      }\n    }\n  }\n  const nextStep = () => {\n    let lengkap = false\n    for (const r of requirement) {\n      if (pelatihanTerpilih.prasyarat.includes(r.id)) {\n        if (biodata[r.name] === null) {\n          toast.error(`Dokumen \"${r.label}\" tidak lengkap`)\n        } else {\n          lengkap = true\n        }\n      }\n    }\n    if (lengkap) {\n      dispatch({ type: 'SET_BIODATA', data: biodata })\n      dispatch({ type: 'KONFIRMASI', data: null })\n      history.push('/pembayaran')\n    }\n  }\n  return (\n    <div className='py-4'>\n      <Container>\n        <Row className='my-2'>\n          <Col xs={12} sm={8}>\n            <Form onSubmit={submitBiodata}>\n              <Card className='p-0'>\n                <Card.Header className='bg-warning'><IoMdBook /> &nbsp; Data Peserta</Card.Header>\n                <Card.Body>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Email <span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control size='sm' type='email' name='email' placeholder='alamat email' onChange={onChange} defaultValue={biodata.email || ''} required /></Col>\n                    <Col sm={6}><Button size=\"sm\" onClick={cekEmail}>Cek by Email</Button></Col>\n                  </Form.Group>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> HP <span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control size='sm' type='text' name='phone' placeholder='nomor handphone' onChange={onChange} defaultValue={biodata.phone || ''} required /></Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> ID KTP/NIK<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='ktp' placeholder='nomor ktp (nik)' onChange={onChange} defaultValue={biodata.ktp || ''} required /></Col>\n                  </Form.Group>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> NISN<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='nisn' placeholder='nomor nisn' onChange={onChange} defaultValue={biodata.nisn || ''} required /></Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Nama<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='nama' placeholder='nama lengkap' onChange={onChange} defaultValue={biodata.nama || ''} required /></Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='3'> Jenis Kelamin<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'>\n                      <div className='mb-3'>\n                        <Form.Check inline type='radio' name='gender' value='pria' label='Pria' id='radio-pria' checked={biodata.gender === 'pria'} onChange={onChange} />\n                        <Form.Check inline type='radio' name='gender' value='wanita' label='Wanita' id='radio-wanita' checked={biodata.gender === 'wanita'} onChange={onChange} />\n                      </div>\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> TTL<span className='text-danger'>*</span></Form.Label>\n                    <Col sm={5}><Form.Control size='sm' name='tempatLahir' placeholder='tempat lahir' onChange={onChange} defaultValue={biodata.tempatLahir || ''} required /></Col>\n                    <Col sm={4}><DatePicker\n                      dateFormat=\"dd-MM-yyyy\"\n                      className='form-control form-control-sm'\n                      selected={biodata.tanggalLahir ? dayjs(biodata.tanggalLahir)['$d'] : ''}\n                      onChange={(date) => onChangeDatepicker('tanggalLahir', date)}\n                    />\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Agama<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='5'>\n                      <Form.Control size='sm' as='select' name='agama' onChange={onChange} value={biodata.agama || ''} required className='capitalize'>\n                        <option value='' disabled>--Pilih Agama</option>\n                        {agama.map((agm, i) => <option key={agm} value={agm}>{agm}</option>)}\n                      </Form.Control>\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='3'> Kewarganegaraan<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'>\n                      <div className='mb-3'>\n                        <Form.Check inline type='radio' name='warga' value='wni' label='WNI' id='radio-wni' checked={biodata.warga === 'wni'} onChange={onChange} />\n                        <Form.Check inline type='radio' name='warga' value='wna' label='WNA' id='radio-wna' checked={biodata.warga === 'wna'} onChange={onChange} />\n                      </div>\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Alamat<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='alamat' placeholder='nama jalan / no. rumah' onChange={onChange} defaultValue={biodata.alamat || ''} required /></Col>\n                  </Form.Group>\n                  {\n                    wilayah.provinsi && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Provinsi<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih provinsi'\n                          options={wilayah.provinsi}\n                          value={[{ name: biodata.provinsi && biodata.provinsi.name }]}\n                          onChange={e => onChangeWilayah('provinsi', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    wilayah.kabupaten && biodata.provinsi && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kabupaten<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih kabupaten'\n                          options={getOptions('kabupaten', biodata.provinsi)}\n                          value={[{ name: biodata.kabupaten && biodata.kabupaten.name }]}\n                          onChange={(e) => onChangeWilayah('kabupaten', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    wilayah.kecamatan && biodata.kabupaten && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kecamatan<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih kecamatan'\n                          options={getOptions('kecamatan', biodata.kabupaten)}\n                          value={[{ name: biodata.kecamatan && biodata.kecamatan.name }]}\n                          onChange={(e) => onChangeWilayah('kecamatan', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    wilayah.kelurahan && biodata.kecamatan && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kelurahan<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih kelurahan'\n                          options={getOptions('kelurahan', biodata.kecamatan)}\n                          value={[{ name: biodata.kelurahan && biodata.kelurahan.name }]}\n                          onChange={(e) => onChangeWilayah('kelurahan', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    biodata.kelurahan && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> RT/RW <span className='text-danger'>*</span></Form.Label>\n                      <Col sm={4}><Form.Control type='number' size='sm' name='rt' placeholder='rt' onChange={onChange} defaultValue={biodata.rt || ''} required /></Col>\n                      <Col sm={4}><Form.Control type='number' size='sm' name='rw' placeholder='rw' onChange={onChange} defaultValue={biodata.rw || ''} required /></Col>\n                    </Form.Group>\n                  }\n                  {\n                    biodata.rt && biodata.rw && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kodepos <span className='text-danger'>*</span></Form.Label>\n                      <Col sm={5}><Form.Control size='sm' name='kodepos' placeholder='kodepos' onChange={onChange} defaultValue={biodata.kodepos || ''} required /></Col>\n                    </Form.Group>\n                  }\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Ayah<span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control type='text' size='sm' name='ayah' placeholder='nama ayah' onChange={onChange} defaultValue={biodata.ayah || ''} required /></Col>\n                  </Form.Group>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Ibu<span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control type='text' size='sm' name='ibu' placeholder='nama ibu' onChange={onChange} defaultValue={biodata.ibu || ''} required /></Col>\n                  </Form.Group>\n                  <Button variant='primary' className='float-right' type=\"submit\">{biodata.id ? 'Update' : 'Simpan'}</Button>\n                </Card.Body>\n              </Card>\n            </Form>\n            {biodata.id &&\n              <Card className='mt-4'>\n                <Card.Header className='bg-primary text-white'><IoMdCloudUpload /> &nbsp; Upload Dokumen</Card.Header>\n                <Card.Body>\n                  <small className=\"text-primary\">\n                    <i>*tanda <IoIosCheckmarkCircleOutline className=\"text-success\" />, dokumen sudah berhasil diupload</i><br />\n                    <i>*tanda <IoIosCloseCircleOutline className=\"text-danger\" />, dokumen harus diupload ulang</i><br />\n                  </small>\n                  <br />\n                  {requirement.map((req, ri) => {\n                    return req.enable && <Form.Group as={Row} key={ri}>\n                      <Col md={11} xs={10}>\n                        <Form.File type=\"file\" name={req.name} onChange={onChangeFileUpload} custom\n                          label={req.label} />\n                      </Col>\n                      <Col md={1} xs={2}>\n                        <big className=\"mt-2\" >{biodata[req.name] ?\n                          <IoIosCheckmarkCircleOutline className=\"text-success\" />\n                          : <IoIosCloseCircleOutline className=\"text-danger\" />}</big>\n                      </Col>\n                    </Form.Group>\n                  })}\n                  <Button variant='primary' className='float-right' onClick={nextStep}>Lanjutkan</Button>\n                </Card.Body>\n              </Card>\n            }\n          </Col>\n          <Col xs={12} sm={4}>\n            <Sidebar />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Container, Row, Col, Card, ListGroup, Form, Button } from 'react-bootstrap'\nimport { toast } from 'react-toastify'\nimport { customAlphabet } from 'nanoid'\n\nimport Sidebar from 'components/sidebar'\nconst nanoid = customAlphabet('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ', 10)\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nconst daftarBank = [\n  { id: 'mandiri', label: 'Mandiri', rek: '101.00.98300.997', nama: 'Dompet Dhuafa' },\n  { id: 'bca', label: 'BCA', rek: '237.301.8881', nama: 'Dompet Dhuafa' },\n  { id: 'bni', label: 'BNI', rek: '000.530.2291', nama: 'Dompet Dhuafa' },\n  { id: 'muamalat', label: 'Muamalat', rek: '301.001.5515', nama: 'Dompet Dhuafa' },\n]\nexport default (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const jadwalTerpilih = useSelector(state => state.jadwalTerpilih)\n  const pelatihanTerpilih = useSelector(state => state.pelatihanTerpilih)\n  const biodataPeserta = useSelector(state => state.biodataPeserta)\n  const pendaftaran = useSelector(state => state.pendaftaran)\n  const [bank, setBank] = useState(null)\n\n  useEffect(() => {\n    if (!biodataPeserta.id || !pelatihanTerpilih.id || !jadwalTerpilih.id) {\n      history.push('/')\n    }\n  }, [history, biodataPeserta, pelatihanTerpilih, jadwalTerpilih])\n\n  const onChange = (e) => {\n    setBank(e.target.value)\n  }\n  const onBayar = async () => {\n    const message = <div>Kami telah mengirim invoice ke alamat email {biodataPeserta.email}. Segera lakukan pembayaran agar dapat diproses oleh admin.</div>\n    const payload = {\n      kode: nanoid(),\n      pelatihan: pelatihanTerpilih.id,\n      jadwal: jadwalTerpilih.id,\n      peserta: biodataPeserta.id,\n      bank: bank,\n    }\n    let { data } = await axios.post(`${REST_URL}/pendaftaran`, payload)\n    if (data) {\n      toast.success(message)\n      dispatch({ type: 'KONFIRMASI', data: payload })\n      // dispatch({ type: 'SET_JADWAL', data: null })\n      // dispatch({ type: 'SET_PELATIHAN', data: null })\n      // dispatch({ type: 'SET_BIODATA', data: null })\n    }\n\n  }\n  const bankTerpilih = pendaftaran && pendaftaran.bank ? daftarBank.filter(r => r.id === pendaftaran.bank)[0] : {}\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col xs={12} sm={4}>\n          <Sidebar />\n        </Col>\n        <Col>\n          {pendaftaran ?\n            <Card>\n              <Card.Header className=\"bg-warning\">Pilih metode pembayaran</Card.Header>\n              <Card.Body>\n                <div>\n                  Silahkan lakukan pembayaran ke: <br />\n                  Bank: <b className=\"text-primary\">{bankTerpilih.label}</b> <br />\n                  A/N: <b className=\"text-primary\">{bankTerpilih.nama}</b> <br />\n                  REK: <b className=\"text-primary\">{bankTerpilih.rek}</b> <br />\n                  <br />\n                    KODE PEMBAYARAN: \n                  <div className=\"text-center w-100\"><b className=\"text-primary\">{pendaftaran.kode} &nbsp; </b><br/>\n                    <button className=\"btn btn-primary btn-sm\" style={{width: 100}} onClick={() => navigator.clipboard.writeText(pendaftaran.kode)}>Copy</button>\n                  </div>\n                  <br />\n                  <br />\n                  <i className=\"text-danger\">* Cantumkan kode pembayaran di bagian deskripsi transfer</i><br />\n                  <i className=\"text-danger\">* Copy paste kode unik untuk melakukan konfirmasi</i>\n                </div>\n                <Button onClick={() => history.push('/konfirmasi')}>Konfirmasi</Button>\n              </Card.Body>\n            </Card>\n            :\n            <Card>\n              <Card.Header className=\"bg-primary text-white\">Pilih metode pembayaran</Card.Header>\n              <ListGroup>\n                {daftarBank ? daftarBank.map((b, i) =>\n                  <ListGroup.Item key={i}>\n                    <Form.Check name=\"bank\" custom type=\"radio\" id={b.id} value={b.id} onChange={onChange}\n                      label={\n                        <div>\n                          <img height=\"12\" src={`https://ecs7.tokopedia.net/img/toppay/sprites/${b.id}.png`} alt=\"\" />\n                          <span className=\"ml-3\">{b.label}</span>\n                        </div>\n                      } />\n                  </ListGroup.Item>\n                ) : null}\n              </ListGroup>\n              {bank && <Card.Footer><Button block variant=\"primary\" onClick={onBayar}>Bayar</Button> </Card.Footer>}\n            </Card>\n          }\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","import axios from 'axios'\nimport React, { useState } from 'react'\nimport { Container, Row, Col, Card, Form, Button, Table } from 'react-bootstrap'\nimport { IoMdCheckmark, IoMdClose } from 'react-icons/io'\nimport { toast } from 'react-toastify'\n\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default (props) => {\n  // const history = useHistory()\n  const [konfirmasi, setKonfirmasi] = useState({})\n  const [statusPembayaran, setStatusPembayaran] = useState([])\n  const [sertifikatHtml, setSertifikat] = useState(null)\n\n  // konfirmasi funtions\n  const onChangeKonfirmasi = (e) => {\n    if (e.target.files) {\n      konfirmasi[e.target.name] = e.target.files[0]\n    } else {\n      konfirmasi[e.target.name] = e.target.value\n    }\n    setKonfirmasi(Object.assign({}, konfirmasi))\n  }\n  const onKonfirmasi = async (e) => {\n    e.preventDefault()\n    const { kode, bukti } = konfirmasi\n    const formData = new FormData();\n    formData.append('file', bukti)\n    formData.append('kode', kode)\n    const config = { headers: { 'content-type': 'multipart/form-data' } }\n    const res = await axios.post(`${REST_URL}/konfirmasi`, formData, config)\n    if (res.status === 200) {\n      const message = <div>Kami akan lakukan verifikasi pembayaran anda. Terima kasih.</div>\n      toast.success(message, {\n        onClose: () => setKonfirmasi({})\n      })\n    }\n  }\n\n  // status functions\n  const onCekStatus = async (e) => {\n    e.preventDefault()\n    const { email } = e.target\n    const { data } = await axios.get(`${REST_URL}/pendaftaran?email=${email.value}`)\n    if(data.length){\n      setStatusPembayaran(data)\n    }else{\n      toast.error('Data tidak ditemukan')\n    }\n  }\n  const copyKode = (value) => {\n    navigator.clipboard.writeText(value)\n    konfirmasi.kode = value\n    setKonfirmasi(Object.assign({}, konfirmasi))\n  }\n\n  // sertifikat functions\n  const onCekSertifikat = async (e) => {\n    e.preventDefault(e)\n    try {\n      const { kodeSertifikat, kodePelaut } = e.target\n      if (!kodeSertifikat.value && !kodePelaut.value) {\n        return toast.error('masukkan kode sertifikat atau kode pelaut yang akan diverifikasi')\n      }\n      let params = { \"sentdata[0][basepath]\": \"/\", \"sentdata[0][captcha]\": \"\" }\n      if (kodePelaut.value) {\n        params[\"sentdata[0][stringtofind]\"] = kodePelaut.value\n        params[\"sentdata[0][searchmode]\"] = \"1\"\n      }\n      if (kodeSertifikat.value) {\n        params[\"sentdata[0][stringtofind]\"] = kodeSertifikat.value\n        params[\"sentdata[0][searchmode]\"] = \"2\"\n      }\n      const body = Object.keys(params).map((key) => {\n        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      }).join('&')\n      const response = await fetch('https://pelaut.dephub.go.id/webapp/finddata', {\n        method: 'POST',\n        mode: 'cors',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },\n        body\n      })\n      if (kodeSertifikat) {\n        if (response.type !== 'type:opaque') {\n          const result = await response.json()\n          let html = result.hasile.split('\\t')\n          if (html[1]) {\n            const test = html[1].match(new RegExp(/src='.*.g'/))\n            const test1 = test[0].split('/').slice(-1).pop().replace(\"'\", '')\n            const test2 = html[1].replace(/src='.*'/, `src='https://pelaut.dephub.go.id/asset/images/${test1}'/`)\n            html[1] = test2 + `</div><div class='col-lg-8'>`\n            setSertifikat(html.join('\\t'))\n          } else {\n            setSertifikat(html.join('\\t'))\n            return toast.error('kode sertifikat atau kode pelaut tidak ditemukan')\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return (\n    <Container>\n      {/* Konfirmasi Pembayaran */}\n      <Row>\n        <Col xs={12} lg={6}>\n          <br />\n          <Card>\n            <Card.Header className=\"bg-warning\"> Konfirmasi pembayaran </Card.Header>\n            <Card.Body>\n              <Form name=\"konfirmasi\" onSubmit={onKonfirmasi}>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm='4'>Kode Pendaftaran<span className='text-danger'>*</span></Form.Label>\n                  <Col sm='8'><Form.Control size='sm' type='text' name='kode' placeholder='kode pendaftaran'\n                    onChange={onChangeKonfirmasi} value={konfirmasi.kode || ''} required /></Col>\n                </Form.Group>\n                <Form.Group>\n                  <Form.File type=\"file\" name=\"bukti\" onChange={onChangeKonfirmasi} custom\n                    label={konfirmasi.bukti ? konfirmasi.bukti.name : 'Upload bukti pembayaran'} />\n                </Form.Group>\n                <Button type=\"submit\">Kirimkan</Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Status Pembayaran */}\n      <Row>\n        <Col xs={12} lg={10}>\n          <br />\n          <Card>\n            <Card.Header className=\"bg-warning\"> Cek status peserta </Card.Header>\n            <Card.Body>\n              <Form name=\"konfirmasi\" onSubmit={onCekStatus}>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm={2}>Email<span className='text-danger'>*</span></Form.Label>\n                  <Col sm={10} lg={5}><Form.Control size='sm' type='text' name='email' placeholder='email pendaftaran' required /></Col>\n                </Form.Group>\n                <Button type=\"submit\">Cari</Button>\n              </Form>\n              {statusPembayaran.length ?\n                <Table responsive='sm' size='md' borderless>\n                  <thead style={{ color: '#666' }} className=\"text-center\">\n                    <tr>\n                      <th>Kode </th>\n                      <th>Pelatihan</th>\n                      <th>Tanggal</th>\n                      <th>Bayar</th>\n                      <th>Aktif</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {statusPembayaran.map((sp, i) => (\n                      <tr key={i} className=\"text-center\">\n                        <td>{sp.kode} &nbsp; {!sp.buktiPembayaran && <button className=\"btn btn-primary btn-sm\" onClick={() => copyKode(sp.kode)}>Copy</button>}</td>\n                        <td>{sp.pelatihan}</td>\n                        <td>{sp.tanggal}</td>\n                        <td>{sp.buktiPembayaran ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</td>\n                        <td>{sp.cekPembayaran && sp.cekBiodata ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n                : null}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Verifikasi Pelaut */}\n      <Row>\n        <Col>\n          <br />\n          <Card>\n            <Card.Header className=\"bg-warning\">Verifikasi Pelaut & Sertifikat</Card.Header>\n            <Card.Body>\n              <Form name=\"konfirmasi\" onSubmit={onCekSertifikat}>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm='4'>Kode Sertifikat<span className='text-danger'>*</span></Form.Label>\n                  <Col sm='6'><Form.Control size='sm' type='text' name='kodeSertifikat' placeholder='kode sertifikat' /* defaultValue=\"6200597510012420\" */ /></Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm='4'>Kode Pelaut<span className='text-danger'>*</span></Form.Label>\n                  <Col sm='6'><Form.Control size='sm' type='text' name='kodePelaut' placeholder='kode pelaut' /* defaultValue=\"6200597510\" */ /></Col>\n                </Form.Group>\n                <Button type=\"submit\">Cari</Button>\n              </Form>\n              <br />\n              {sertifikatHtml && <div dangerouslySetInnerHTML={{ __html: (sertifikatHtml || '') }}></div>}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <br />\n    </Container >\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Card } from 'react-bootstrap'\n\nexport default (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n  useEffect(() => {\n    if (auth && auth.user === 'Administrator') {\n      history.push('/admin')\n    }\n  })\n  const onSubmit = (e) => {\n    e.preventDefault()\n    const { username, password } = e.target\n    if (username.value === 'admin' && password.value === '1234') {\n      dispatch({ type: 'LOGIN', data: { user: 'Administrator' } })\n      history.push('/admin')\n    }\n  }\n  return (\n    <Container className='mt-4 full-height'>\n      <Card className='col-6'>\n        <Card.Body>\n          <form onSubmit={onSubmit} method='post' className='py-4'>\n            <h3 className='text-center'>Login</h3>\n            <label className='grey-text font-weight-light'>Username</label>\n            <input type='text' name='username' className='form-control' required />\n            <br />\n            <label className='grey-text font-weight-light'>Password</label>\n            <input type='password' name='password' className='form-control' required />\n            <br/>\n            {/* demo: admin/1234 */}\n            <div className='mt-4 mb-5'>\n              <Link to='/' className='btn btn-secondary float-left'>Pendaftaran<i className='fa fa-paper-plane-o ml-2' /></Link>\n              <button className='btn btn-primary float-right' type='submit'>Login<i className='fa fa-paper-plane-o ml-2' /></button>\n            </div>\n          </form>\n        </Card.Body>\n      </Card>\n    </Container>\n  )\n}\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Row, Col, Modal, Image, Form } from 'react-bootstrap'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default ({ detail, show, onHide }) => {\n  const [requirement, setRequirement] = useState([])\n  const [enlarge, setEnlarge] = useState(null)\n  const [confirmed, setConfirmed] = useState({ cekBiodata: detail.cekBiodata, cekPembayaran: detail.cekPembayaran })\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n    let { data } = await axios.get('/requirement.json')\n    setRequirement(data)\n  }\n  const showImage = (e) => {\n    setEnlarge(e.target.src)\n  }\n  const onChange = async (e) => {\n    const { id, checked } = e.target\n    const payload = {\n      kode: detail.kode,\n      [id]: checked ? 1 : 0\n    }\n    let { data } = await axios.post(REST_URL + '/verifikasi', payload)\n    setConfirmed(data)\n  }\n  return (\n    <Modal show={show} onHide={onHide} size=\"lg\" className=\"text-gray-dark\">\n      <Modal.Header closeButton>\n        <Form className=\"w-100\">\n          <Modal.Title className=\"text-center text-primary\">VERIFIKASI</Modal.Title>\n          <Form.Check\n            custom\n            type=\"checkbox\"\n            id=\"cekBiodata\"\n            label=\"Biodata sudah sesuai dengan dokumen\"\n            checked={confirmed.cekBiodata}\n            onChange={onChange}\n          />\n          <Form.Check\n            custom\n            type=\"checkbox\"\n            id=\"cekPembayaran\"\n            label=\"Bukti pembayaran telah diterima dan sesuai\"\n            checked={confirmed.cekPembayaran}\n            onChange={onChange}\n          />\n        </Form>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Row>\n          <Col md={6}>\n            <pre className=\"playground text-gray\">\n              <Col><label>Nama: </label> {detail.nama}</Col>\n              <Col><label>NIK: </label> {detail.ktp}</Col>\n              <Col><label>NISN: </label> {detail.nisn}</Col>\n              <Col><label>TTL: </label> {detail.tempatLahir}/{detail.tanggalLahir}</Col>\n              <Col><label>JK: </label> {detail.gender}</Col>\n              <Col><label>Agama: </label> {detail.agama}</Col>\n              <Col><label>Kewarganegaraan: </label> {detail.warga}</Col>\n              <Col><label>Nama Ayah: </label> {detail.ayah}</Col>\n              <Col><label>Nama Ibu: </label> {detail.ibu}</Col>\n            </pre>\n          </Col>\n          <Col md={6}>\n            <pre className=\"playground text-gray\">\n              <Col><label>Alamat: </label> {detail.alamat}</Col>\n              <Col><label>Provinsi: </label> {detail.provinsi}</Col>\n              <Col><label>Kabupaten: </label> {detail.kabupaten}</Col>\n              <Col><label>Kecamatan: </label> {detail.kecamatan}</Col>\n              <Col><label>Kelurahan: </label> {detail.kelurahan}</Col>\n              <Col><label>RT/RW: </label> {detail.rt}/{detail.rw}</Col>\n              <Col><label>Kodepos: </label> {detail.kodepos}</Col>\n              <Col><label>email: </label> {detail.email}</Col>\n            </pre>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          {detail.buktiPembayaran &&\n            <Col xs={6} sm={2} className=\"text-center\">\n              <Image className=\"pointer\" height=\"50\" src={`${REST_URL}/upload/pembayaran/${detail.buktiPembayaran}`} onClick={showImage} />\n              <div className=\"card-title\" >Transfer</div>\n            </Col>\n          }\n          {requirement && requirement.map((req, i) => {\n            return detail[req.name] &&\n              <Col key={i} xs={6} sm={2} className=\"text-center\">\n                <Image className=\"pointer\" height=\"50\" src={`${REST_URL}/upload/dokumen/${detail[req.name]}`} rounded onClick={showImage} />\n                <div style={{ overflow: 'hidden' }}>{req.id}</div>\n              </Col>\n          })}\n        </Row>\n        <i className=\"text-danger\">*klik pada gambar untuk melihat lebih besar</i>\n        {enlarge && <Image src={enlarge} width=\"100%\" rounded />}\n      </Modal.Body>\n\n      <Modal.Footer className=\"justify-content-between\">\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport ReactTable from 'react-table-v6'\nimport { Container, Row, Col, Card } from 'react-bootstrap'\nimport { IoMdEye, IoMdClose, IoMdCheckmark } from 'react-icons/io'\nimport Detail from './pendaftaranDetail'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default (props) => {\n  const [show, setShow] = useState(false)\n  const [detail, setDetail] = useState(null)\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n    let response = await fetch(REST_URL + '/pendaftaran')\n    response = await response.json()\n    setData(response)\n  }\n  const detailData = (index) => {\n    setShow(true)\n    setDetail(data[index])\n  }\n  const onHide = () => {\n    fetchData()\n    setShow(false)\n  }\n\n  const columns = [\n    {\n      Header: '', accessor: 'id', width: 50,\n      Cell: props => <button className=\"btn px-2 py-0 text-success\" onClick={() => detailData(props.index)}><IoMdEye /></button>\n    },\n    { Header: 'Nama', accessor: 'nama', Cell: props => <span className=\"capitalize\">{props.value}</span> },\n    { Header: 'Bank', accessor: 'bank' },\n    { Header: 'Pelatihan', accessor: 'pelatihan' },\n    { Header: 'Biaya', accessor: 'biaya' },\n    {\n      Header: 'Biodata', accessor: 'cekBiodata',\n      Cell: props => <div className=\"text-center\">{props.value ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</div>\n    },\n    {\n      Header: 'Pembayaran', accessor: 'cekPembayaran',\n      Cell: props => <div className=\"text-center\">{props.value ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</div>\n    },\n\n  ]\n  const pagination = { limit: 10 }\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"bg-primary\">\n              <big className=\"text-white\">Daftar Peserta</big>\n            </Card.Header>\n            <ReactTable\n              data={data}\n              columns={columns}\n              minRows={pagination.limit}\n              getTrProps={(state, rowInfo) => ({\n                onClick: () => detailData(rowInfo.index),\n                style: { cursor: rowInfo ? 'pointer' : '' }\n              })}\n            />\n          </Card>\n        </Col>\n      </Row>\n      {show && <Detail show={show} onHide={onHide} detail={detail} />}\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport ReactTable from 'react-table-v6'\nimport { Container, Row, Col, Card, Button, Modal, Form } from 'react-bootstrap'\nimport { IoMdCreate, IoMdTrash } from 'react-icons/io'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\nimport { formatRibuan } from 'helpers/index'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nconst requirement = [\n  { nama: \"BST\", deskripsi: \"Setifikat BST\" },\n  { nama: \"AFF\", deskripsi: \"Setifikat AFF\" },\n  { nama: \"MFA\", deskripsi: \"Setifikat MFA\" },\n  { nama: \"KTP\", deskripsi: \"Nomor Induk Kewarganegaraan (NIK)\" },\n  { nama: \"SKES\", deskripsi: \"Surat Keterangan Sehat dari Rumah Sakit yang ditunjuk oleh Dirjen Hubla\" },\n  { nama: \"IJAZAH\", deskripsi: \"Ijazah Umum legalisir\" },\n  { nama: \"AKTE\", deskripsi: \"Akta kelahiran\" },\n  { nama: \"FOTO\", deskripsi: \"Foto warna terbaru ukuran 3×4\" },\n]\nexport default (props) => {\n  const [data, setData] = useState([])\n  const [show, showModal] = useState(false)\n  const [detail, setDetail] = useState({})\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n    let response = await fetch(REST_URL + '/pelatihan')\n    response = await response.json()\n    setData(response)\n  }\n  const tambahData = () => {\n    showModal(true)\n    setDetail({})\n  }\n  const editData = (index) => {\n    showModal(true)\n    setDetail(data[index])\n  }\n  const onChange = (e) => {\n    if (e.target.files) {\n      detail[e.target.name] = e.target.files[0]\n    } else {\n      detail[e.target.name] = e.target.value\n    }\n    setDetail(Object.assign({}, detail))\n  }\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    const formData = new FormData()\n    for (const dt of Object.entries(detail)) {\n      if (dt[0] === 'prasyarat') { dt[1] = JSON.stringify(dt[1]) }\n      formData.append(dt[0], dt[1])\n    }\n    const config = { headers: { 'content-type': 'multipart/form-data' } }\n    try {\n      let response = await axios.post(REST_URL + '/pelatihan', formData, config)\n      if (response.message) {\n      } else {\n        showModal(false)\n        fetchData()\n      }\n    } catch (error) {\n      toast.error(error.message)\n    }\n  }\n  const onDelete = async (index) => {\n    const { id, nama } = data[index]\n    const confirmed = window.confirm(`Apakah anda yakin menghapus pelatihan ${nama}?`)\n    if (confirmed) {\n      let response = await fetch(REST_URL + '/pelatihan/' + id, {\n        method: 'DELETE',\n      })\n      if (response.statusText === \"OK\") {\n        showModal(false)\n        fetchData()\n      }\n    }\n  }\n\n  const columns = [\n    {\n      Header: '', accessor: 'id', width: 100,\n      Cell: props => {\n        return <div>\n          <button className=\"btn px-2 py-0 text-success\" onClick={() => editData(props.index)}><IoMdCreate /></button>\n          <button className=\"btn px-2 py-0 text-danger\" onClick={() => onDelete(props.index)}><IoMdTrash /></button>\n        </div>\n      }\n    },\n    { Header: 'Nama', accessor: 'nama', width: 100 },\n    { Header: 'Deskripsi', accessor: 'deskripsi', width: 200 },\n    { Header: 'Waktu', accessor: 'waktu', width: 80, Cell: props => props.value + ' hari' },\n    { Header: 'Biaya', accessor: 'biaya', width: 100, Cell: props => formatRibuan(props.value) },\n    { Header: 'Prasyarat', accessor: 'prasyarat', Cell: props => props.value.join(', ') },\n\n  ]\n  const pagination = {\n    limit: 10\n  }\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"bg-primary\">\n              <big className=\"text-white\">Daftar Pelatihan</big>\n              <Button size=\"sm\" variant=\"success\" className=\"float-right\" onClick={() => tambahData()} >Tambah Baru</Button>\n            </Card.Header>\n            <ReactTable\n              data={data}\n              columns={columns}\n              minRows={pagination.limit}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Modal show={show} onHide={() => showModal(false)} size=\"lg\">\n        <Form onSubmit={onSubmit}>\n          <Modal.Header closeButton>\n            <Modal.Title>{detail ? detail.nama : 'Data Pelatihan'}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>ID<span className='text-danger'>*</span></Form.Label>\n              <Col xs=\"4\" sm='3' md='2'><Form.Control size='sm' type='text' name='nama' onChange={onChange} placeholder=\"ex: BST\" defaultValue={detail.nama || ''} required /></Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Nama<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'><Form.Control size='sm' type='text' name='deskripsi' onChange={onChange} placeholder=\"ex: Basic Safety Training\" defaultValue={detail.deskripsi || ''} required /></Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Waktu<span className='text-danger'>*</span></Form.Label>\n              <Col xs='3' sm='2'><Form.Control size='sm' type='number' name='waktu' onChange={onChange} defaultValue={detail.waktu || ''} required /></Col>\n              <Col xs='3'>hari</Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Biaya<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'><Form.Control size='sm' type='number' name='biaya' onChange={onChange} defaultValue={detail.biaya || ''} required /></Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Gambar<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'><Form.File type=\"file\" name=\"gambar\" onChange={onChange} custom\n                label={detail.gambar ? detail.gambar.name || detail.gambar : 'Upload gambar pelatihan'} /></Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Prasyarat<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'>\n                <Select\n                  isMulti\n                  isSearchable\n                  className='p-0 form-control-sm'\n                  placeholder='Pilih persyaratan'\n                  options={requirement}\n                  value={detail.prasyarat && detail.prasyarat.map(option => ({ nama: option, deskripsi: option }))}\n                  onChange={opt => {\n                    detail.prasyarat = opt ? opt.map(r => r.nama) : []\n                    setDetail(Object.assign({}, detail))\n                  }}\n                  getOptionLabel={option => option.deskripsi}\n                  getOptionValue={option => option.nama}\n                />\n              </Col>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\"> Save Changes </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport dayjs from 'dayjs'\nimport ReactTable from 'react-table-v6'\nimport { Container, Row, Col, Card, Button, Modal, Form } from 'react-bootstrap'\nimport { IoMdCreate, IoMdTrash, IoMdCheckmark, IoMdClose } from 'react-icons/io'\nimport Select from 'react-select'\nimport DatePicker from 'react-datepicker'\nimport { toast } from 'react-toastify'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nconst days = ['minggu', 'senin', 'selasa', 'rabu', 'kamis', 'jumat', 'sabtu']\nexport default (props) => {\n  const [data, setData] = useState([])\n  const [show, showModal] = useState(false)\n  const [kelas, setKelas] = useState([])\n  const [detail, setDetail] = useState({})\n  useEffect(() => {\n    fetchData()\n    fetchKelas()\n  }, [])\n  const fetchKelas = async () => {\n    let response = await fetch(`${REST_URL}/pelatihan`)\n    response = await response.json()\n    setKelas(response)\n  }\n  const fetchData = async () => {\n    let response = await fetch(`${REST_URL}/jadwal`)\n    response = await response.json()\n    setData(response)\n  }\n  const tambahData = () => {\n    showModal(true)\n    setDetail({ aktif: 1 })\n  }\n  const editData = (index) => {\n    showModal(true)\n    setDetail(data[index])\n  }\n  const deleteData = async (index) => {\n    const { id, pelatihan } = data[index]\n    const confirmed = window.confirm(`Apakah anda yakin menghapus jadwal ${pelatihan}?`)\n    if (confirmed) {\n      await axios.delete(`${REST_URL}/jadwal/${id}`)\n      showModal(false)\n      fetchData()\n    }\n  }\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      if (!detail.pelatihan) {\n        return toast.error('Pilih kelas!')\n      }\n      let { data } = await axios.post(`${REST_URL}/jadwal`, detail)\n      toast.success(data.message)\n      showModal(false)\n      fetchData()\n    } catch (error) {\n      toast.error(error.message)\n    }\n  }\n  const columns = [\n    {\n      Header: '', accessor: 'id', width: 110,\n      Cell: props => {\n        return <div>\n          <button className=\"btn px-2 py-0 text-success\" onClick={() => editData(props.index)}><IoMdCreate /></button>\n          <button className=\"btn px-2 py-0 text-danger\" onClick={() => deleteData(props.index)}><IoMdTrash /></button>\n        </div>\n      }\n    },\n    { Header: 'Kelas', accessor: 'pelatihan', width: 100 },\n    { Header: 'Hari', accessor: 'hari', width: 100 },\n    { Header: 'Tanggal', accessor: 'tanggal', width: 200 },\n    {\n      Header: 'Aktif', accessor: 'aktif', width: 200, Cell: props =>\n        <div className=\"text-center\">{props.value ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</div>\n    },\n\n  ]\n  const pagination = {\n    limit: 10\n  }\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"bg-primary\">\n              <big className=\"text-white\">Jadwal Pelatihan</big>\n              <Button variant=\"success\" className=\"btn-sm float-right\" onClick={() => tambahData()} >Tambah Baru</Button>\n            </Card.Header>\n            <ReactTable\n              data={data}\n              columns={columns}\n              minRows={pagination.limit}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Modal show={show} onHide={() => showModal(false)} size=\"lg\">\n        <Form onSubmit={onSubmit}>\n          <Modal.Header closeButton>\n            <Modal.Title>{detail.id ? 'Edit Jadwal' : 'Tambah Jadwal'}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Kelas<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'>\n                <Select\n                  className='p-0 form-control-sm'\n                  placeholder='Pilih kelas'\n                  options={kelas}\n                  value={[{ nama: detail.pelatihan, deskripsi: detail.pelatihan }]}\n                  onChange={(option) => {\n                    detail.pelatihan = option.nama\n                    setDetail({ ...detail })\n                  }}\n                  getOptionLabel={option => option.deskripsi}\n                  getOptionValue={option => option.nama}\n                  required={true}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Tanggal<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'>\n                <DatePicker\n                  className=\"form-control\"\n                  // showTimeSelect\n                  // timeFormat=\"HH:mm\"\n                  dateFormat=\"yyyy-MM-dd HH:mm\"\n                  selected={detail.tanggal ? dayjs(detail.tanggal)['$d'] : ''}\n                  onChange={(tgl) => {\n                    detail.tanggal = dayjs(tgl).format('YYYY-MM-DD HH:mm:ss')\n                    detail.hari = days[dayjs(detail.tanggal).format('d')]\n                    setDetail({ ...detail })\n                  }}\n                  injectTimes={[9, 20]}\n                  timeIntervals={15}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Hari<span className='text-danger'>*</span></Form.Label>\n              <Col xs='4' md='3' lg=\"2\">\n                <Form.Control\n                  className=\"capitalize \" size='sm' type='text' name='hari'\n                  value={detail.hari || ''} readOnly\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Aktif<span className='text-danger'>*</span></Form.Label>\n              <Col xs='3'>\n                <Form.Check type=\"switch\" id=\"switch-status\" label=\"Aktif\"\n                  checked={detail.aktif ? true : false}\n                  onChange={e => {\n                    detail.aktif = e.target.checked ? 1 : 0\n                    setDetail(Object.assign({}, detail))\n                  }}\n                />\n              </Col>\n            </Form.Group>\n\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\"> Save Changes </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\n\nimport './App.scss'\nimport NotFound from 'pages/404'\nimport Header from 'components/header'\nimport Home from 'pages/home'\nimport Biodata from 'pages/biodata'\nimport Pembayaran from 'pages/pembayaran'\nimport Konfirmasi from 'pages/konfirmasi'\nimport Login from 'pages/login'\nimport Admin from 'admin/pendaftaran'\nimport Pelatihan from 'admin/pelatihan'\nimport Jadwal from 'admin/jadwal'\n\nconst AppRoute = ({ component: Component, ...rest }) => {\n  return <Route\n    {...rest} render={props => (\n      <div>\n        <Header />\n        <Component {...props} />\n      </div>\n    )}\n  />\n}\n\nconst AdminRoute = ({ component: Component, ...rest }) => {\n  const auth = useSelector(state => state.auth)\n  if (auth) {\n    return <AppRoute {...rest} component={Component} />\n  } else {\n    return <Route {...rest} render={props => <Redirect to={{ pathname: '/login', from: props.location }} />} />\n  }\n}\n\nclass AuthRouter extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <ToastContainer />\n        <Switch>\n          <AppRoute exact path='/' component={Home} />\n          <AppRoute path='/biodata' component={Biodata} />\n          <AppRoute path='/pembayaran' component={Pembayaran} />\n          <AppRoute path='/konfirmasi' component={Konfirmasi} />\n          <Route path='/login' component={Login} />\n\n          <AdminRoute path='/admin/pelatihan' component={Pelatihan} />\n          <AdminRoute path='/admin/jadwal' component={Jadwal} />\n          <AdminRoute exact path='/admin' component={Admin} />\n          <Route path='/404' component={NotFound} />\n          <Route render={() => <Redirect to='/404' />} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\nexport default AuthRouter\n","const INITIAL_STATE = {\n  auth: null,\n  jadwalTerpilih: {},\n  pelatihanTerpilih: {},\n  biodataPeserta: {},\n  pendaftaran: {}\n}\n\n// REDUCERS\nexport const rootReducer = (state = INITIAL_STATE, { type, data }) => {\n  switch (type) {\n    case 'LOGIN':\n      return Object.assign({}, state, { auth: data })\n    case 'LOGOUT':\n      return Object.assign({}, state, { auth: null })\n    case 'SET_JADWAL':\n      return Object.assign({}, state, { jadwalTerpilih: data })\n    case 'SET_PELATIHAN':\n      return Object.assign({}, state, { pelatihanTerpilih: data })\n    case 'SET_BIODATA':\n      return Object.assign({}, state, { biodataPeserta: data })\n    case 'KONFIRMASI':\n      return Object.assign({}, state, { pendaftaran: data })\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport 'react-toastify/dist/ReactToastify.css'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-table-v6/react-table.css'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport App from './App'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n// import logger from 'redux-logger'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { rootReducer } from './store.js'\n\nconst persistedReducer = persistReducer({ key: 'root', storage }, rootReducer)\nconst middleware = composeWithDevTools(applyMiddleware(thunk))\nconst store = createStore(persistedReducer, middleware)\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n  ,\n  document.getElementById('root')\n)\n\n// unregister() to register() below. Note this comes with some pitfalls.\nserviceWorker.unregister()\n"],"sourceRoot":""}