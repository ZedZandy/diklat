{"version":3,"sources":["serviceWorker.js","pages/404.js","components/header.js","helpers/index.js","pages/home.js","components/sidebar.js","pages/biodata.js","pages/pembayaran.js","pages/konfirmasi.js","pages/login.js","admin/pendaftaranDetail.js","admin/pendaftaran.js","admin/pelatihan.js","admin/jadwal.js","App.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","NotFound","props","className","to","dispatch","useDispatch","auth","useSelector","state","Navbar","expand","Container","src","height","alt","Toggle","aria-controls","Collapse","id","user","Nav","onClick","type","formatRibuan","x","toString","replace","history","useHistory","useState","pelatihan","setPelatihan","kelas","setKelas","jadwal","setJadwal","useEffect","a","axios","get","process","data","fetchKelas","findJadwal","nama","Row","Col","xs","sm","Card","Header","Body","Form","Control","as","onChange","e","filter","r","target","value","disabled","map","k","i","key","deskripsi","biaya","waktu","length","Table","responsive","size","borderless","kls","hari","tanggal","Button","variant","push","jadwalTerpilih","pelatihanTerpilih","biodataPeserta","email","phone","Papa","parsePromise","url","Promise","complete","error","parse","header","download","dynamicTyping","agama","defBio","biodata","setBiodata","wilayah","setWilayah","requirement","setRequirement","prov","kab","kec","kel","d","enable","prasyarat","includes","provinsi","kabupaten","kecamatan","kelurahan","fetchWilayah","cekEmail","Object","assign","name","onChangeWilayah","getOptions","submitBiodata","preventDefault","bio","toast","post","message","success","onChangeFileUpload","files","formData","FormData","append","config","headers","status","filename","onSubmit","Group","Label","column","placeholder","defaultValue","required","ktp","nisn","Check","inline","label","checked","gender","tempatLahir","dateFormat","selected","tanggalLahir","dayjs","date","format","agm","warga","alamat","options","getOptionLabel","option","getOptionValue","rt","rw","kodepos","ayah","ibu","req","ri","md","File","custom","lengkap","nanoid","customAlphabet","daftarBank","rek","pendaftaran","bank","setBank","onBayar","payload","kode","peserta","bankTerpilih","style","width","navigator","clipboard","writeText","ListGroup","b","Item","Footer","block","konfirmasi","setKonfirmasi","statusPembayaran","setStatusPembayaran","sertifikatHtml","setSertifikat","onChangeKonfirmasi","onKonfirmasi","bukti","onClose","onCekStatus","onCekSertifikat","kodeSertifikat","kodePelaut","params","body","keys","encodeURIComponent","join","fetch","method","mode","response","json","result","html","hasile","split","test","RegExp","test1","slice","pop","test2","console","log","lg","color","sp","buktiPembayaran","cekPembayaran","cekBiodata","dangerouslySetInnerHTML","__html","username","password","detail","show","onHide","enlarge","setEnlarge","confirmed","setConfirmed","fetchData","showImage","REST_URL","Modal","closeButton","Title","Image","rounded","overflow","setShow","setDetail","setData","detailData","index","columns","accessor","Cell","minRows","getTrProps","rowInfo","cursor","showModal","onDelete","confirm","statusText","isMulti","isSearchable","opt","days","deleteData","delete","aktif","tgl","injectTimes","timeIntervals","readOnly","AppRoute","Component","component","rest","render","AdminRoute","pathname","from","AuthRouter","exact","path","Home","Biodata","Pembayaran","Konfirmasi","Login","Pelatihan","Jadwal","Admin","React","INITIAL_STATE","persistedReducer","persistReducer","storage","middleware","composeWithDevTools","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","loading","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5a3dc864.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NotFound = (props) => {\n  return (\n    <div className='text-center text-white full-height'>\n      <div className='notFound'>\n        <h1>404 - Not Found</h1>\n        <Link to='/' className='btn btn-warning'>Kembali ke halaman utama</Link>\n      </div>\n    </div>\n  )\n}\nexport default NotFound\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Container, Navbar, Nav } from 'react-bootstrap'\n\nexport default () => {\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' })\n  }\n  return (\n    <div>\n      <Navbar expand='lg' className='navbar-dark bg-primary'>\n        <Container>\n          <Link className='navbar-brand' to='/'><img src='/img/logo.png' height='50' alt='' /></Link>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            {auth && auth.user ?\n              <Nav className='ml-auto'>\n                <Link to='/admin' className='nav-link'>Peserta</Link>\n                <Link to='/admin/pelatihan' className='nav-link'>Pelatihan</Link>\n                <Link to='/admin/jadwal' className='nav-link'>Jadwal</Link>\n                <Link to='#' className='nav-link' onClick={logout}>Logout</Link>\n              </Nav>\n              :\n              <Nav className='ml-auto'>\n                <Link to='/konfirmasi' className='nav-link'>Konfirmasi</Link>\n                <Link to='/login' className='nav-link'>Login</Link>\n              </Nav>\n            }\n\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <div className='bg-warning py-1'>\n        <div className='container text-center'>\n          <small>Kami membatalkan beberapa jadwal pelatihan untuk mengantisipasi COVID-19. Kamu tetap bisa mendaftar pelatihan secara online.</small>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const formatRibuan = (x) => {\n  return x ? x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\") : x\n}","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { Container, Row, Col, Card, Button, Form, Table } from 'react-bootstrap'\nimport { formatRibuan } from 'helpers/index'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [pelatihan, setPelatihan] = useState({})\n  const [kelas, setKelas] = useState([])\n  const [jadwal, setJadwal] = useState([])\n\n  useEffect(() => { // componentDidMount\n    const fetchKelas = async () => {\n      let { data } = await axios.get(`${REST_URL}/pelatihan`)\n      // if (pelatihan) {\n      //   const getpelatihan = data.filter(r => r.id == pelatihan.id)\n      //   if (getpelatihan.length) {\n      //     findJadwal(getpelatihan[0].nama)\n      //   }\n      // }\n      setKelas(data)\n    }\n    fetchKelas()\n  }, [])\n  const onPilihProgram = (e) => {\n    const data = kelas.filter(r => r.id.toString() === e.target.value)[0]\n    setPelatihan(data)\n    dispatch({ type: 'SET_PELATIHAN', data })\n    findJadwal(data.nama)\n  }\n  const findJadwal = async (nama) => {\n    let { data } = await axios.get(`${REST_URL}/jadwal?pelatihan=${nama}`)\n    setJadwal(data)\n  }\n  const nextStep = (data) => {\n    dispatch({ type: 'SET_JADWAL', data })\n    history.push('/biodata')\n  }\n  return (\n    <div className='mt-4'>\n      <Container>\n        <Row>\n          <Col xs={12} sm={6}>\n            <Card className='p-0' >\n              <Card.Header className='bg-warning text-center'>Pilih Program Pelatihan</Card.Header>\n              <Card.Body>\n                <Form.Control as='select' onChange={onPilihProgram} value={pelatihan.id || \"\"}>\n                  <option value='' disabled>--Pilih program</option>\n                  {kelas.map((k, i) => <option key={i} value={k.id}>({k.nama}) {k.deskripsi}</option>)}\n                </Form.Control>\n                <br />\n                {pelatihan && pelatihan.nama === 'BST' &&\n                  <div>\n                    <label className='primary'>Biaya</label>: <b className='text-primary'>{formatRibuan(pelatihan.biaya)}</b> <br />\n                    <label className='primary'>Waktu</label>: {pelatihan.waktu} hari\n                    <img src='/img/BST.jpg' className='rounded img-fluid' alt='bst' />\n                    <h5 className='mt-4'>Persyaratan:</h5>\n                    <div className='p-2'>\n                      1. Usia minimal 16 thn <br />\n                    2. FC KTP (2lbr) <br />\n                    3. Surat Keterangan Sehat dari Rumah Sakit yang ditunjuk oleh Dirjen Hubla <br />\n                    4. FC Ijazah Umum legalisir (2lbr) <br />\n                    5. FC Akta kelahiran (2lbr) <br />\n                    6. Foto warna terbaru ukuran 3×4 (2lbr) <br />\n                    </div>\n                  </div>}\n                {pelatihan && pelatihan.nama === 'AFF' &&\n                  <div>\n                    <label className='primary'>Biaya</label>: <b className='text-primary'>{pelatihan.biaya}</b> <br />\n                    <label className='primary'>Waktu</label>: {pelatihan.waktu} hari\n                    <img src='/img/AFF.jpg' className='rounded img-fluid' alt='aff' />\n                    <h5 className='mt-4'>Persyaratan:</h5>\n                    <div className='p-2'>\n                      1. Usia minimal 16 thn <br />\n                    2. FC sertifikat BST legalisir (2lbr) <br />\n                    3. FC KTP (2lbr) <br />\n                    4. Surat Keterangan Sehat dari Rumah Sakit yag ditunjuk oleh Dirjen Hubla <br />\n                    5. FC Ijazah Umum legalisir (2lbr) <br />\n                    6.FC Akta kelahiran (2lbr) <br />\n                    7. Foto warna terbaru ukuran 3×4 (2lbr) <br />\n                    </div>\n                  </div>}\n                {pelatihan && pelatihan.nama === 'MFA' &&\n                  <div>\n                    <label className='primary'>Biaya</label>: <b className='text-primary'>{pelatihan.biaya}</b> <br />\n                    <label className='primary'>Waktu</label>: {pelatihan.waktu} hari\n                    <img src='/img/MFA.jpg' className='rounded img-fluid' alt='mfa' />\n                    <h5 className='mt-4'>Persyaratan:</h5>\n                    <div className='p-2'>\n                      1. Usia minimal 16 thn <br />\n                    2. FC sertifikat BST legalisir (2lbr) <br />\n                    3. FC KTP (2lbr) <br />\n                    4. Surat Keterangan Sehat dari Rumah Sakit yag ditunjuk oleh Dirjen Hubla <br />\n                    5. FC Ijazah Umum legalisir (2lbr) <br />\n                    6. FC Akta kelahiran (2lbr) <br />\n                    7. Foto warna terbaru ukuran 3×4 (2lbr) <br />\n                    </div>\n                  </div>}\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6}>\n            {jadwal.length ?\n              <Card className='p-0'>\n                <Card.Header className='bg-warning text-center'>Pilih Waktu Pelatihan</Card.Header>\n                <Card.Body>\n                  <Table responsive='sm' size='md' borderless>\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>Kelas</th>\n                        <th>Hari</th>\n                        <th>Tanggal</th>\n                        <th />\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {jadwal.map((kls, i) => (\n                        <tr key={i}>\n                          <td>{i + 1}</td>\n                          <td>{kls.pelatihan}</td>\n                          <td>{kls.hari}</td>\n                          <td>{kls.tanggal}</td>\n                          <td><Button size='sm' variant='primary' onClick={(e) => nextStep(kls)}>Pilih</Button></td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card> : null}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Card } from 'react-bootstrap'\n\nimport { formatRibuan } from 'helpers/index'\n\nexport default () => {\n  const jadwalTerpilih = useSelector(state => state.jadwalTerpilih)\n  const pelatihanTerpilih = useSelector(state => state.pelatihanTerpilih)\n  const biodataPeserta = useSelector(state => state.biodataPeserta)\n\n  return (\n    <div className='p-0 '>\n      {pelatihanTerpilih.id && jadwalTerpilih.id ?\n        <Card>\n          <Card.Body>\n            <span>Program yang telah anda pilih:</span>\n            <hr />\n            <label>Kelas: </label><span className='float-right text-primary'>{pelatihanTerpilih.nama}</span> <br />\n            <label>Biaya: </label><span className='float-right text-primary'>{formatRibuan(pelatihanTerpilih.biaya) || 0}</span> <br />\n            <label>Waktu: </label><span className='float-right text-primary'>{jadwalTerpilih.tanggal}</span> <br />\n          </Card.Body>\n        </Card>\n        : null}\n      {biodataPeserta.id ?\n        <Card className=\"mt-4 mb-4\">\n          <Card.Body>\n            <span>Detail Peserta:</span>\n            <hr />\n            <label>Nama: </label><span className='float-right text-primary capitalize'>{biodataPeserta.nama || ''}</span> <br />\n            <label>Email: </label><span className='float-right text-primary'>{biodataPeserta.email || ''}</span> <br />\n            <label>Handphone: </label><span className='float-right text-primary'>{biodataPeserta.phone || ''}</span> <br />\n          </Card.Body>\n        </Card>\n        : null}\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Container, Row, Col, Card, Button, Form } from 'react-bootstrap'\nimport DatePicker from 'react-datepicker'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\nimport { IoMdBook, IoMdCloudUpload, IoIosCloseCircleOutline, IoIosCheckmarkCircleOutline } from 'react-icons/io'\nimport Papa from 'papaparse'\nimport dayjs from 'dayjs'\nimport Sidebar from 'components/sidebar'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nPapa.parsePromise = function (url) {\n  return new Promise(function (complete, error) {\n    Papa.parse(url, {\n      header: true,\n      download: true,\n      dynamicTyping: true,\n      complete,\n      error\n    })\n  })\n}\nconst agama = ['islam', 'katholik', 'protestan', 'hindu', 'budha', 'khong hu chu']\nconst defBio = {\n  email: 'john.doe@gmail.com',\n  // phone: '1028319283',\n  // ktp: '8129381923',\n  // nisn: '9123819283',\n  // nama: 'jack hun',\n  // gender: 'pria',\n  // warga: 'wni',\n  // agama: 'katholik',\n  // tempatLahir: 'surabaya',\n  // tanggalLahir: '1988-02-23',\n  // alamat: 'jl kenagan no.21',\n  // ayah: 'joe',\n  // ibu: 'melisa',\n}\n\nexport default () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const pelatihanTerpilih = useSelector(state => state.pelatihanTerpilih)\n  const [biodata, setBiodata] = useState(defBio)\n  const [wilayah, setWilayah] = useState([])\n  const [requirement, setRequirement] = useState([])\n\n  useEffect(() => {\n    if (!pelatihanTerpilih.id) {\n      return history.push('/')\n    }\n    dispatch({ type: 'SET_BIODATA', data: {} })\n    const fetchWilayah = async () => {\n      const prov = await Papa.parsePromise('/wilayah/provinsi.csv')\n      const kab = await Papa.parsePromise('/wilayah/kabupaten.csv')\n      const kec = await Papa.parsePromise('/wilayah/kecamatan.csv')\n      const kel = await Papa.parsePromise('/wilayah/kelurahan.csv')\n      let { data } = await axios.get('/requirement.json')\n      if (pelatihanTerpilih.id) {\n        for (const d of data) {\n          d.enable = pelatihanTerpilih.prasyarat.includes(d.id)\n        }\n      }\n      setRequirement(data)\n      setWilayah({ provinsi: prov.data, kabupaten: kab.data, kecamatan: kec.data, kelurahan: kel.data })\n    }\n    fetchWilayah()\n  }, [dispatch, history, pelatihanTerpilih])\n  const cekEmail = async () => {\n    if (biodata.email) {\n      let { data } = await axios.get(`${REST_URL}/peserta?email=${biodata.email}`)\n      if (data.length) {\n        data[0].provinsi = null\n        data[0].kabupaten = null\n        data[0].kecamatan = null\n        data[0].kelurahan = null\n        setBiodata(Object.assign({}, data[0]))\n      }\n    } else {\n      setBiodata(Object.assign({}))\n    }\n  }\n  const onChange = async (e) => {\n    const { name, value } = e.target\n    biodata[name] = value\n    setBiodata(Object.assign({}, biodata))\n  }\n  const onChangeDatepicker = (key, value) => {\n    biodata[key] = dayjs(value).format('YYYY-MM-DD')\n    setBiodata(Object.assign({}, biodata))\n  }\n  const onChangeWilayah = (key, value) => {\n    biodata[key] = value\n    setBiodata(Object.assign({}, biodata))\n  }\n  const getOptions = (key, value) => {\n    if (key === 'kabupaten') {\n      return wilayah.kabupaten.filter(r => r.provinsi === value.id)\n    }\n    if (key === 'kecamatan') {\n      return wilayah.kecamatan.filter(r => r.kabupaten === value.id)\n    }\n    if (key === 'kelurahan') {\n      return wilayah.kelurahan.filter(r => r.kecamatan === value.id)\n    }\n    return []\n  }\n\n  const submitBiodata = async (e) => {\n    e.preventDefault()\n    const bio = Object.assign({}, biodata)\n\n    if (!biodata.provinsi) { return toast.error('Provinsi harus diisi') }\n    if (!biodata.kabupaten) { return toast.error('Kabupaten harus diisi') }\n    if (!biodata.kecamatan) { return toast.error('Kecamatan harus diisi') }\n    if (!biodata.kelurahan) { return toast.error('Kelurahan harus diisi') }\n\n    bio.provinsi = biodata.provinsi.name\n    bio.kabupaten = biodata.kabupaten.name\n    bio.kecamatan = biodata.kecamatan.name\n    bio.kelurahan = biodata.kelurahan.name\n\n    let { data } = await axios.post(`${REST_URL}/peserta`, bio)\n    dispatch({ type: 'SET_BIODATA', data: biodata })\n    const message = data.message === 'CREATED' ? 'ditambahkan' : 'diperbahrui'\n    toast.success(`Data telah berhasil ${message}.`)\n  }\n  const onChangeFileUpload = async (e) => {\n    const { files, name } = e.target\n    setBiodata(Object.assign({}, { ...biodata, [name]: null }))\n    if (biodata.id && files[0]) {\n      const formData = new FormData()\n      formData.append('file', files[0])\n      formData.append('id', biodata.id)\n      formData.append('name', name)\n      const config = { headers: { 'content-type': 'multipart/form-data' } }\n      const { status, data } = await axios.post(`${REST_URL}/peserta/upload`, formData, config)\n      if (status === 200) {\n        setBiodata(Object.assign({}, { ...biodata, [name]: data.filename }))\n      }\n    }\n  }\n  const nextStep = () => {\n    let lengkap = false\n    for (const r of requirement) {\n      if (pelatihanTerpilih.prasyarat.includes(r.id)) {\n        if (biodata[r.name] === null) {\n          toast.error(`Dokumen \"${r.label}\" tidak lengkap`)\n        } else {\n          lengkap = true\n        }\n      }\n    }\n    if (lengkap) {\n      dispatch({ type: 'SET_BIODATA', data: biodata })\n      dispatch({ type: 'KONFIRMASI', data: null })\n      history.push('/pembayaran')\n    }\n  }\n  return (\n    <div className='py-4'>\n      <Container>\n        <Row className='my-2'>\n          <Col xs={12} sm={8}>\n            <Form onSubmit={submitBiodata}>\n              <Card className='p-0'>\n                <Card.Header className='bg-warning'><IoMdBook /> &nbsp; Data Peserta</Card.Header>\n                <Card.Body>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Email <span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control size='sm' type='email' name='email' placeholder='alamat email' onChange={onChange} defaultValue={biodata.email || ''} required /></Col>\n                    <Col sm={6}><Button size=\"sm\" onClick={cekEmail}>Cek by Email</Button></Col>\n                  </Form.Group>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> HP <span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control size='sm' type='text' name='phone' placeholder='nomor handphone' onChange={onChange} defaultValue={biodata.phone || ''} required /></Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> ID KTP/NIK<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='ktp' placeholder='nomor ktp (nik)' onChange={onChange} defaultValue={biodata.ktp || ''} required /></Col>\n                  </Form.Group>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> NISN<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='nisn' placeholder='nomor nisn' onChange={onChange} defaultValue={biodata.nisn || ''} required /></Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Nama<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='nama' placeholder='nama lengkap' onChange={onChange} defaultValue={biodata.nama || ''} required /></Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='3'> Jenis Kelamin<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'>\n                      <div className='mb-3'>\n                        <Form.Check inline type='radio' name='gender' value='pria' label='Pria' id='radio-pria' checked={biodata.gender === 'pria'} onChange={onChange} />\n                        <Form.Check inline type='radio' name='gender' value='wanita' label='Wanita' id='radio-wanita' checked={biodata.gender === 'wanita'} onChange={onChange} />\n                      </div>\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> TTL<span className='text-danger'>*</span></Form.Label>\n                    <Col sm={5}><Form.Control size='sm' name='tempatLahir' placeholder='tempat lahir' onChange={onChange} defaultValue={biodata.tempatLahir || ''} required /></Col>\n                    <Col sm={4}><DatePicker\n                      dateFormat=\"dd-MM-yyyy\"\n                      className='form-control form-control-sm'\n                      selected={biodata.tanggalLahir ? dayjs(biodata.tanggalLahir)['$d'] : ''}\n                      onChange={(date) => onChangeDatepicker('tanggalLahir', date)}\n                    />\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Agama<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='5'>\n                      <Form.Control size='sm' as='select' name='agama' onChange={onChange} value={biodata.agama || ''} required className='capitalize'>\n                        <option value='' disabled>--Pilih Agama</option>\n                        {agama.map((agm, i) => <option key={agm} value={agm}>{agm}</option>)}\n                      </Form.Control>\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='3'> Kewarganegaraan<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'>\n                      <div className='mb-3'>\n                        <Form.Check inline type='radio' name='warga' value='wni' label='WNI' id='radio-wni' checked={biodata.warga === 'wni'} onChange={onChange} />\n                        <Form.Check inline type='radio' name='warga' value='wna' label='WNA' id='radio-wna' checked={biodata.warga === 'wna'} onChange={onChange} />\n                      </div>\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Alamat<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='alamat' placeholder='nama jalan / no. rumah' onChange={onChange} defaultValue={biodata.alamat || ''} required /></Col>\n                  </Form.Group>\n                  {\n                    wilayah.provinsi && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Provinsi<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih provinsi'\n                          options={wilayah.provinsi}\n                          value={[{ name: biodata.provinsi && biodata.provinsi.name }]}\n                          onChange={e => onChangeWilayah('provinsi', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    wilayah.kabupaten && biodata.provinsi && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kabupaten<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih kabupaten'\n                          options={getOptions('kabupaten', biodata.provinsi)}\n                          value={[{ name: biodata.kabupaten && biodata.kabupaten.name }]}\n                          onChange={(e) => onChangeWilayah('kabupaten', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    wilayah.kecamatan && biodata.kabupaten && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kecamatan<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih kecamatan'\n                          options={getOptions('kecamatan', biodata.kabupaten)}\n                          value={[{ name: biodata.kecamatan && biodata.kecamatan.name }]}\n                          onChange={(e) => onChangeWilayah('kecamatan', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    wilayah.kelurahan && biodata.kecamatan && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kelurahan<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih kelurahan'\n                          options={getOptions('kelurahan', biodata.kecamatan)}\n                          value={[{ name: biodata.kelurahan && biodata.kelurahan.name }]}\n                          onChange={(e) => onChangeWilayah('kelurahan', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    biodata.kelurahan && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> RT/RW <span className='text-danger'>*</span></Form.Label>\n                      <Col sm={4}><Form.Control type='number' size='sm' name='rt' placeholder='rt' onChange={onChange} defaultValue={biodata.rt || ''} required /></Col>\n                      <Col sm={4}><Form.Control type='number' size='sm' name='rw' placeholder='rw' onChange={onChange} defaultValue={biodata.rw || ''} required /></Col>\n                    </Form.Group>\n                  }\n                  {\n                    biodata.rt && biodata.rw && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kodepos <span className='text-danger'>*</span></Form.Label>\n                      <Col sm={5}><Form.Control size='sm' name='kodepos' placeholder='kodepos' onChange={onChange} defaultValue={biodata.kodepos || ''} required /></Col>\n                    </Form.Group>\n                  }\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Ayah<span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control type='text' size='sm' name='ayah' placeholder='nama ayah' onChange={onChange} defaultValue={biodata.ayah || ''} required /></Col>\n                  </Form.Group>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Ibu<span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control type='text' size='sm' name='ibu' placeholder='nama ibu' onChange={onChange} defaultValue={biodata.ibu || ''} required /></Col>\n                  </Form.Group>\n                  <Button variant='primary' className='float-right' type=\"submit\">{biodata.id ? 'Update' : 'Simpan'}</Button>\n                </Card.Body>\n              </Card>\n            </Form>\n            {biodata.id &&\n              <Card className='mt-4'>\n                <Card.Header className='bg-primary text-white'><IoMdCloudUpload /> &nbsp; Upload Dokumen</Card.Header>\n                <Card.Body>\n                  <small className=\"text-primary\">\n                    <i>*tanda <IoIosCheckmarkCircleOutline className=\"text-success\" />, dokumen sudah berhasil diupload</i><br />\n                    <i>*tanda <IoIosCloseCircleOutline className=\"text-danger\" />, dokumen harus diupload ulang</i><br />\n                  </small>\n                  <br />\n                  {requirement.map((req, ri) => {\n                    return req.enable && <Form.Group as={Row} key={ri}>\n                      <Col md={11} xs={10}>\n                        <Form.File type=\"file\" name={req.name} onChange={onChangeFileUpload} custom\n                          label={req.label} />\n                      </Col>\n                      <Col md={1} xs={2}>\n                        <big className=\"mt-2\" >{biodata[req.name] ?\n                          <IoIosCheckmarkCircleOutline className=\"text-success\" />\n                          : <IoIosCloseCircleOutline className=\"text-danger\" />}</big>\n                      </Col>\n                    </Form.Group>\n                  })}\n                  <Button variant='primary' className='float-right' onClick={nextStep}>Lanjutkan</Button>\n                </Card.Body>\n              </Card>\n            }\n          </Col>\n          <Col xs={12} sm={4}>\n            <Sidebar />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Container, Row, Col, Card, ListGroup, Form, Button } from 'react-bootstrap'\nimport { toast } from 'react-toastify'\nimport { customAlphabet } from 'nanoid'\n\nimport Sidebar from 'components/sidebar'\nconst nanoid = customAlphabet('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ', 10)\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nconst daftarBank = [\n  { id: 'mandiri', label: 'Mandiri', rek: '101.00.98300.997', nama: 'Dompet Dhuafa' },\n  { id: 'bca', label: 'BCA', rek: '237.301.8881', nama: 'Dompet Dhuafa' },\n  { id: 'bni', label: 'BNI', rek: '000.530.2291', nama: 'Dompet Dhuafa' },\n  { id: 'muamalat', label: 'Muamalat', rek: '301.001.5515', nama: 'Dompet Dhuafa' },\n]\nexport default (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const jadwalTerpilih = useSelector(state => state.jadwalTerpilih)\n  const pelatihanTerpilih = useSelector(state => state.pelatihanTerpilih)\n  const biodataPeserta = useSelector(state => state.biodataPeserta)\n  const pendaftaran = useSelector(state => state.pendaftaran)\n  const [bank, setBank] = useState(null)\n\n  useEffect(() => {\n    if (!biodataPeserta.id || !pelatihanTerpilih.id || !jadwalTerpilih.id) {\n      history.push('/')\n    }\n  }, [history, biodataPeserta, pelatihanTerpilih, jadwalTerpilih])\n\n  const onChange = (e) => {\n    setBank(e.target.value)\n  }\n  const onBayar = async () => {\n    const message = <div>Kami telah mengirim invoice ke alamat email {biodataPeserta.email}. Segera lakukan pembayaran agar dapat diproses oleh admin.</div>\n    const payload = {\n      kode: nanoid(),\n      pelatihan: pelatihanTerpilih.id,\n      jadwal: jadwalTerpilih.id,\n      peserta: biodataPeserta.id,\n      bank: bank,\n    }\n    let { data } = await axios.post(`${REST_URL}/pendaftaran`, payload)\n    if (data) {\n      toast.success(message)\n      dispatch({ type: 'KONFIRMASI', data: payload })\n      // dispatch({ type: 'SET_JADWAL', data: null })\n      // dispatch({ type: 'SET_PELATIHAN', data: null })\n      // dispatch({ type: 'SET_BIODATA', data: null })\n    }\n\n  }\n  const bankTerpilih = pendaftaran && pendaftaran.bank ? daftarBank.filter(r => r.id === pendaftaran.bank)[0] : {}\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col xs={12} sm={4}>\n          <Sidebar />\n        </Col>\n        <Col>\n          {pendaftaran ?\n            <Card>\n              <Card.Header className=\"bg-warning\">Pilih metode pembayaran</Card.Header>\n              <Card.Body>\n                <div>\n                  Silahkan lakukan pembayaran ke: <br />\n                  Bank: <b className=\"text-primary\">{bankTerpilih.label}</b> <br />\n                  A/N: <b className=\"text-primary\">{bankTerpilih.nama}</b> <br />\n                  REK: <b className=\"text-primary\">{bankTerpilih.rek}</b> <br />\n                  <br />\n                    KODE PEMBAYARAN: \n                  <div className=\"text-center w-100\"><b className=\"text-primary\">{pendaftaran.kode} &nbsp; </b><br/>\n                    <button className=\"btn btn-primary btn-sm\" style={{width: 100}} onClick={() => navigator.clipboard.writeText(pendaftaran.kode)}>Copy</button>\n                  </div>\n                  <br />\n                  <br />\n                  <i className=\"text-danger\">* Cantumkan kode pembayaran di bagian deskripsi transfer</i><br />\n                  <i className=\"text-danger\">* Copy paste kode unik untuk melakukan konfirmasi</i>\n                </div>\n                <Button onClick={() => history.push('/konfirmasi')}>Konfirmasi</Button>\n              </Card.Body>\n            </Card>\n            :\n            <Card>\n              <Card.Header className=\"bg-primary text-white\">Pilih metode pembayaran</Card.Header>\n              <ListGroup>\n                {daftarBank ? daftarBank.map((b, i) =>\n                  <ListGroup.Item key={i}>\n                    <Form.Check name=\"bank\" custom type=\"radio\" id={b.id} value={b.id} onChange={onChange}\n                      label={\n                        <div>\n                          <img height=\"12\" src={`https://ecs7.tokopedia.net/img/toppay/sprites/${b.id}.png`} alt=\"\" />\n                          <span className=\"ml-3\">{b.label}</span>\n                        </div>\n                      } />\n                  </ListGroup.Item>\n                ) : null}\n              </ListGroup>\n              {bank && <Card.Footer><Button block variant=\"primary\" onClick={onBayar}>Bayar</Button> </Card.Footer>}\n            </Card>\n          }\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","import axios from 'axios'\nimport React, { useState } from 'react'\nimport { Container, Row, Col, Card, Form, Button, Table } from 'react-bootstrap'\nimport { IoMdCheckmark, IoMdClose } from 'react-icons/io'\nimport { toast } from 'react-toastify'\n\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default (props) => {\n  // const history = useHistory()\n  const [konfirmasi, setKonfirmasi] = useState({})\n  const [statusPembayaran, setStatusPembayaran] = useState([])\n  const [sertifikatHtml, setSertifikat] = useState(null)\n\n  // konfirmasi funtions\n  const onChangeKonfirmasi = (e) => {\n    if (e.target.files) {\n      konfirmasi[e.target.name] = e.target.files[0]\n    } else {\n      konfirmasi[e.target.name] = e.target.value\n    }\n    setKonfirmasi(Object.assign({}, konfirmasi))\n  }\n  const onKonfirmasi = async (e) => {\n    e.preventDefault()\n    const { kode, bukti } = konfirmasi\n    const formData = new FormData();\n    formData.append('file', bukti)\n    formData.append('kode', kode)\n    const config = { headers: { 'content-type': 'multipart/form-data' } }\n    const res = await axios.post(`${REST_URL}/konfirmasi`, formData, config)\n    if (res.status === 200) {\n      const message = <div>Kami akan lakukan verifikasi pembayaran anda. Terima kasih.</div>\n      toast.success(message, {\n        onClose: () => setKonfirmasi({})\n      })\n    }\n  }\n\n  // status functions\n  const onCekStatus = async (e) => {\n    e.preventDefault()\n    const { email } = e.target\n    const { data } = await axios.get(`${REST_URL}/pendaftaran?email=`, email.value)\n    setStatusPembayaran(data)\n  }\n  const copyKode = (value) => {\n    navigator.clipboard.writeText(value)\n    konfirmasi.kode = value\n    setKonfirmasi(Object.assign({}, konfirmasi))\n  }\n\n  // sertifikat functions\n  const onCekSertifikat = async (e) => {\n    e.preventDefault(e)\n    try {\n      const { kodeSertifikat, kodePelaut } = e.target\n      if (!kodeSertifikat.value && !kodePelaut.value) {\n        return toast.error('masukkan kode sertifikat atau kode pelaut yang akan diverifikasi')\n      }\n      let params = { \"sentdata[0][basepath]\": \"/\", \"sentdata[0][captcha]\": \"\" }\n      if (kodePelaut.value) {\n        params[\"sentdata[0][stringtofind]\"] = kodePelaut.value\n        params[\"sentdata[0][searchmode]\"] = \"1\"\n      }\n      if (kodeSertifikat.value) {\n        params[\"sentdata[0][stringtofind]\"] = kodeSertifikat.value\n        params[\"sentdata[0][searchmode]\"] = \"2\"\n      }\n      const body = Object.keys(params).map((key) => {\n        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      }).join('&')\n      const response = await fetch('https://pelaut.dephub.go.id/webapp/finddata', {\n        method: 'POST',\n        mode: 'cors',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },\n        body\n      })\n      if (kodeSertifikat) {\n        if (response.type !== 'type:opaque') {\n          const result = await response.json()\n          let html = result.hasile.split('\\t')\n          const test = html[1].match(new RegExp(/src='.*.g'/))\n          const test1 = test[0].split('/').slice(-1).pop().replace(\"'\", '')\n          const test2 = html[1].replace(/src='.*'/, `src='https://pelaut.dephub.go.id/asset/images/${test1}'/`)\n          html[1] = test2 + `</div><div class='col-lg-8'>`\n          setSertifikat(html.join('\\t'))\n        }\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  return (\n    <Container>\n      {/* Konfirmasi Pembayaran */}\n      <Row>\n        <Col xs={12} lg={6}>\n          <br />\n          <Card>\n            <Card.Header className=\"bg-warning\"> Konfirmasi pembayaran </Card.Header>\n            <Card.Body>\n              <Form name=\"konfirmasi\" onSubmit={onKonfirmasi}>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm='4'>Kode Pendaftaran<span className='text-danger'>*</span></Form.Label>\n                  <Col sm='8'><Form.Control size='sm' type='text' name='kode' placeholder='kode pendaftaran'\n                    onChange={onChangeKonfirmasi} value={konfirmasi.kode || ''} required /></Col>\n                </Form.Group>\n                <Form.Group>\n                  <Form.File type=\"file\" name=\"bukti\" onChange={onChangeKonfirmasi} custom\n                    label={konfirmasi.bukti ? konfirmasi.bukti.name : 'Upload bukti pembayaran'} />\n                </Form.Group>\n                <Button type=\"submit\">Kirimkan</Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Status Pembayaran */}\n      <Row>\n        <Col xs={12} lg={10}>\n          <br />\n          <Card>\n            <Card.Header className=\"bg-warning\"> Cek status peserta </Card.Header>\n            <Card.Body>\n              <Form name=\"konfirmasi\" onSubmit={onCekStatus}>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm={2}>Email<span className='text-danger'>*</span></Form.Label>\n                  <Col sm={10} lg={5}><Form.Control defaultValue=\"john.doe@gmail.com\" size='sm' type='text' name='email' placeholder='email pendaftaran' required /></Col>\n                </Form.Group>\n                <Button type=\"submit\">Cari</Button>\n              </Form>\n              {statusPembayaran.length ?\n                <Table responsive='sm' size='md' borderless>\n                  <thead style={{ color: '#666' }} className=\"text-center\">\n                    <tr>\n                      <th>Kode </th>\n                      <th>Pelatihan</th>\n                      <th>Tanggal</th>\n                      <th>Bayar</th>\n                      <th>Aktif</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {statusPembayaran.map((sp, i) => (\n                      <tr key={i} className=\"text-center\">\n                        <td>{sp.kode} &nbsp; {!sp.buktiPembayaran && <button className=\"btn btn-primary btn-sm\" onClick={() => copyKode(sp.kode)}>Copy</button>}</td>\n                        <td>{sp.pelatihan}</td>\n                        <td>{sp.tanggal}</td>\n                        <td>{sp.buktiPembayaran ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</td>\n                        <td>{sp.cekPembayaran && sp.cekBiodata ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n                : null}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Verifikasi Pelaut */}\n      <Row>\n        <Col>\n          <br />\n          <Card>\n            <Card.Header className=\"bg-warning\">Verifikasi Pelaut & Sertifikat</Card.Header>\n            <Card.Body>\n              <Form name=\"konfirmasi\" onSubmit={onCekSertifikat}>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm='4'>Kode Sertifikat<span className='text-danger'>*</span></Form.Label>\n                  <Col sm='6'><Form.Control size='sm' type='text' name='kodeSertifikat' placeholder='kode sertifikat' /* defaultValue=\"6200597510012420\" */ /></Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm='4'>Kode Pelaut<span className='text-danger'>*</span></Form.Label>\n                  <Col sm='6'><Form.Control size='sm' type='text' name='kodePelaut' placeholder='kode pelaut' /* defaultValue=\"6200597510\" */ /></Col>\n                </Form.Group>\n                <Button type=\"submit\">Cari</Button>\n              </Form>\n              <br />\n              {sertifikatHtml && <div dangerouslySetInnerHTML={{ __html: (sertifikatHtml || '') }}></div>}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <br />\n    </Container >\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Card } from 'react-bootstrap'\n\nexport default (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n  useEffect(() => {\n    if (auth && auth.user === 'Administrator') {\n      history.push('/admin')\n    }\n  })\n  const onSubmit = (e) => {\n    e.preventDefault()\n    const { username, password } = e.target\n    console.log(username.value, password.value)\n    if (username.value === 'admin' && password.value === '1234') {\n      dispatch({ type: 'LOGIN', data: { user: 'Administrator' } })\n      history.push('/admin')\n    }\n  }\n  return (\n    <Container className='mt-4 full-height'>\n      <Card className='col-6'>\n        <Card.Body>\n          <form onSubmit={onSubmit} method='post' className='py-4'>\n            <h3 className='text-center'>Login</h3>\n            <label className='grey-text font-weight-light'>Username</label>\n            <input type='text' name='username' className='form-control' required />\n            <br />\n            <label className='grey-text font-weight-light'>Password</label>\n            <input type='password' name='password' className='form-control' required />\n            <br/>\n            demo: admin/1234\n            <div className='mt-4 mb-5'>\n              <Link to='/' className='btn btn-secondary float-left'>Pendaftaran<i className='fa fa-paper-plane-o ml-2' /></Link>\n              <button className='btn btn-primary float-right' type='submit'>Login<i className='fa fa-paper-plane-o ml-2' /></button>\n            </div>\n          </form>\n        </Card.Body>\n      </Card>\n    </Container>\n  )\n}\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Row, Col, Modal, Image, Form } from 'react-bootstrap'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default ({ detail, show, onHide }) => {\n  const [requirement, setRequirement] = useState([])\n  const [enlarge, setEnlarge] = useState(null)\n  const [confirmed, setConfirmed] = useState({ cekBiodata: detail.cekBiodata, cekPembayaran: detail.cekPembayaran })\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n    let { data } = await axios.get('/requirement.json')\n    setRequirement(data)\n  }\n  const showImage = (e) => {\n    setEnlarge(e.target.src)\n  }\n  const onChange = async (e) => {\n    const { id, checked } = e.target\n    const payload = {\n      kode: detail.kode,\n      [id]: checked ? 1 : 0\n    }\n    let { data } = await axios.post(REST_URL + '/verifikasi', payload)\n    setConfirmed(data)\n  }\n  return (\n    <Modal show={show} onHide={onHide} size=\"lg\" className=\"text-gray-dark\">\n      <Modal.Header closeButton>\n        <Form className=\"w-100\">\n          <Modal.Title className=\"text-center text-primary\">VERIFIKASI</Modal.Title>\n          <Form.Check\n            custom\n            type=\"checkbox\"\n            id=\"cekBiodata\"\n            label=\"Biodata sudah sesuai dengan dokumen\"\n            checked={confirmed.cekBiodata}\n            onChange={onChange}\n          />\n          <Form.Check\n            custom\n            type=\"checkbox\"\n            id=\"cekPembayaran\"\n            label=\"Bukti pembayaran telah diterima dan sesuai\"\n            checked={confirmed.cekPembayaran}\n            onChange={onChange}\n          />\n        </Form>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Row>\n          <Col md={6}>\n            <pre className=\"playground text-gray\">\n              <Col><label>Nama: </label> {detail.nama}</Col>\n              <Col><label>NIK: </label> {detail.ktp}</Col>\n              <Col><label>NISN: </label> {detail.nisn}</Col>\n              <Col><label>TTL: </label> {detail.tempatLahir}/{detail.tanggalLahir}</Col>\n              <Col><label>JK: </label> {detail.gender}</Col>\n              <Col><label>Agama: </label> {detail.agama}</Col>\n              <Col><label>Kewarganegaraan: </label> {detail.warga}</Col>\n              <Col><label>Nama Ayah: </label> {detail.ayah}</Col>\n              <Col><label>Nama Ibu: </label> {detail.ibu}</Col>\n            </pre>\n          </Col>\n          <Col md={6}>\n            <pre className=\"playground text-gray\">\n              <Col><label>Alamat: </label> {detail.alamat}</Col>\n              <Col><label>Provinsi: </label> {detail.provinsi}</Col>\n              <Col><label>Kabupaten: </label> {detail.kabupaten}</Col>\n              <Col><label>Kecamatan: </label> {detail.kecamatan}</Col>\n              <Col><label>Kelurahan: </label> {detail.kelurahan}</Col>\n              <Col><label>RT/RW: </label> {detail.rt}/{detail.rw}</Col>\n              <Col><label>Kodepos: </label> {detail.kodepos}</Col>\n              <Col><label>email: </label> {detail.email}</Col>\n            </pre>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          {detail.buktiPembayaran &&\n            <Col xs={6} sm={2} className=\"text-center\">\n              <Image className=\"pointer\" height=\"50\" src={`${REST_URL}/upload/pembayaran/${detail.buktiPembayaran}`} onClick={showImage} />\n              <div className=\"card-title\" >Transfer</div>\n            </Col>\n          }\n          {requirement && requirement.map((req, i) => {\n            return detail[req.name] &&\n              <Col key={i} xs={6} sm={2} className=\"text-center\">\n                <Image className=\"pointer\" height=\"50\" src={`${REST_URL}/upload/dokumen/${detail[req.name]}`} rounded onClick={showImage} />\n                <div style={{ overflow: 'hidden' }}>{req.id}</div>\n              </Col>\n          })}\n        </Row>\n        <i className=\"text-danger\">*klik pada gambar untuk melihat lebih besar</i>\n        {enlarge && <Image src={enlarge} width=\"100%\" rounded />}\n      </Modal.Body>\n\n      <Modal.Footer className=\"justify-content-between\">\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport ReactTable from 'react-table-v6'\nimport { Container, Row, Col, Card } from 'react-bootstrap'\nimport { IoMdEye, IoMdClose, IoMdCheckmark } from 'react-icons/io'\nimport Detail from './pendaftaranDetail'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default (props) => {\n  const [show, setShow] = useState(false)\n  const [detail, setDetail] = useState(null)\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n    let response = await fetch(REST_URL + '/pendaftaran')\n    response = await response.json()\n    setData(response)\n  }\n  const detailData = (index) => {\n    setShow(true)\n    setDetail(data[index])\n  }\n  const onHide = () => {\n    fetchData()\n    setShow(false)\n  }\n\n  const columns = [\n    {\n      Header: '', accessor: 'id', width: 50,\n      Cell: props => <button className=\"btn px-2 py-0 text-success\" onClick={() => detailData(props.index)}><IoMdEye /></button>\n    },\n    { Header: 'Nama', accessor: 'nama', Cell: props => <span className=\"capitalize\">{props.value}</span> },\n    { Header: 'Bank', accessor: 'bank' },\n    { Header: 'Pelatihan', accessor: 'pelatihan' },\n    { Header: 'Biaya', accessor: 'biaya' },\n    {\n      Header: 'Biodata', accessor: 'cekBiodata',\n      Cell: props => <div className=\"text-center\">{props.value ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</div>\n    },\n    {\n      Header: 'Pembayaran', accessor: 'cekPembayaran',\n      Cell: props => <div className=\"text-center\">{props.value ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</div>\n    },\n\n  ]\n  const pagination = { limit: 10 }\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"bg-primary\">\n              <big className=\"text-white\">Daftar Peserta</big>\n            </Card.Header>\n            <ReactTable\n              data={data}\n              columns={columns}\n              minRows={pagination.limit}\n              getTrProps={(state, rowInfo) => ({\n                onClick: () => detailData(rowInfo.index),\n                style: { cursor: rowInfo ? 'pointer' : '' }\n              })}\n            />\n          </Card>\n        </Col>\n      </Row>\n      {show && <Detail show={show} onHide={onHide} detail={detail} />}\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport ReactTable from 'react-table-v6'\nimport { Container, Row, Col, Card, Button, Modal, Form } from 'react-bootstrap'\nimport { IoMdCreate, IoMdTrash } from 'react-icons/io'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\nimport { formatRibuan } from 'helpers/index'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nconst requirement = [\n  { nama: \"BST\", deskripsi: \"Setifikat BST\" },\n  { nama: \"AFF\", deskripsi: \"Setifikat AFF\" },\n  { nama: \"MFA\", deskripsi: \"Setifikat MFA\" },\n  { nama: \"KTP\", deskripsi: \"Nomor Induk Kewarganegaraan (NIK)\" },\n  { nama: \"SKES\", deskripsi: \"Surat Keterangan Sehat dari Rumah Sakit yang ditunjuk oleh Dirjen Hubla\" },\n  { nama: \"IJAZAH\", deskripsi: \"Ijazah Umum legalisir\" },\n  { nama: \"AKTE\", deskripsi: \"Akta kelahiran\" },\n  { nama: \"FOTO\", deskripsi: \"Foto warna terbaru ukuran 3×4\" },\n]\nexport default (props) => {\n  const [data, setData] = useState([])\n  const [show, showModal] = useState(false)\n  const [detail, setDetail] = useState({})\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n    let response = await fetch(REST_URL + '/pelatihan')\n    response = await response.json()\n    setData(response)\n  }\n  const tambahData = () => {\n    showModal(true)\n    setDetail({})\n  }\n  const editData = (index) => {\n    showModal(true)\n    setDetail(data[index])\n  }\n  const onChange = (e) => {\n    detail[e.target.name] = e.target.value\n    setDetail(detail)\n  }\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      let response = await axios.post(REST_URL + '/pelatihan', detail)\n      if (response.message) {\n      } else {\n        showModal(false)\n        fetchData()\n      }\n    } catch (error) {\n      toast.error(error.message)\n    }\n  }\n  const onDelete = async (index) => {\n    const { id, nama } = data[index]\n    const confirmed = window.confirm(`Apakah anda yakin menghapus pelatihan ${nama}?`)\n    if (confirmed) {\n      let response = await fetch(REST_URL + '/pelatihan/' + id, {\n        method: 'DELETE',\n      })\n      if (response.statusText === \"OK\") {\n        showModal(false)\n        fetchData()\n      }\n    }\n  }\n\n  const columns = [\n    {\n      Header: '', accessor: 'id', width: 100,\n      Cell: props => {\n        return <div>\n          <button className=\"btn px-2 py-0 text-success\" onClick={() => editData(props.index)}><IoMdCreate /></button>\n          <button className=\"btn px-2 py-0 text-danger\" onClick={() => onDelete(props.index)}><IoMdTrash /></button>\n        </div>\n      }\n    },\n    { Header: 'Nama', accessor: 'nama', width: 100 },\n    { Header: 'Deskripsi', accessor: 'deskripsi', width: 200 },\n    { Header: 'Waktu', accessor: 'waktu', width: 80, Cell: props => props.value + ' hari' },\n    { Header: 'Biaya', accessor: 'biaya', width: 100, Cell: props => formatRibuan(props.value) },\n    { Header: 'Prasyarat', accessor: 'prasyarat', Cell: props => props.value.join(', ') },\n\n  ]\n  const pagination = {\n    limit: 10\n  }\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"bg-primary\">\n              <big className=\"text-white\">Daftar Pelatihan</big>\n              <Button size=\"sm\" variant=\"success\" className=\"float-right\" onClick={() => tambahData()} >Tambah Baru</Button>\n            </Card.Header>\n            <ReactTable\n              data={data}\n              columns={columns}\n              minRows={pagination.limit}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Modal show={show} onHide={() => showModal(false)} size=\"lg\">\n        <Form onSubmit={onSubmit}>\n          <Modal.Header closeButton>\n            <Modal.Title>{detail ? detail.nama : 'Data Pelatihan'}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>ID<span className='text-danger'>*</span></Form.Label>\n              <Col xs=\"4\" sm='3' md='2'><Form.Control size='sm' type='text' name='nama' onChange={onChange} placeholder=\"ex: BST\" defaultValue={detail.nama || ''} required /></Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Nama<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'><Form.Control size='sm' type='text' name='deskripsi' onChange={onChange} placeholder=\"ex: Basic Safety Training\" defaultValue={detail.deskripsi || ''} required /></Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Waktu<span className='text-danger'>*</span></Form.Label>\n              <Col xs='3' sm='2'><Form.Control size='sm' type='number' name='waktu' onChange={onChange} defaultValue={detail.waktu || ''} required /></Col>\n              <Col xs='3'>hari</Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Biaya<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'><Form.Control size='sm' type='number' name='biaya' onChange={onChange} defaultValue={detail.biaya || ''} required /></Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Prasyarat<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'>\n                <Select\n                  isMulti\n                  isSearchable\n                  className='p-0 form-control-sm'\n                  placeholder='Pilih persyaratan'\n                  options={requirement}\n                  value={detail.prasyarat && detail.prasyarat.map(option => ({ nama: option, deskripsi: option }))}\n                  onChange={opt => {\n                    detail.prasyarat = opt ? opt.map(r => r.nama) : []\n                    setDetail(Object.assign({}, detail))\n                  }}\n                  getOptionLabel={option => option.deskripsi}\n                  getOptionValue={option => option.nama}\n                />\n              </Col>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\"> Save Changes </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport dayjs from 'dayjs'\nimport ReactTable from 'react-table-v6'\nimport { Container, Row, Col, Card, Button, Modal, Form } from 'react-bootstrap'\nimport { IoMdCreate, IoMdTrash, IoMdCheckmark, IoMdClose } from 'react-icons/io'\nimport Select from 'react-select'\nimport DatePicker from 'react-datepicker'\nimport { toast } from 'react-toastify'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nconst days = ['minggu', 'senin', 'selasa', 'rabu', 'kamis', 'jumat', 'sabtu']\nexport default (props) => {\n  const [data, setData] = useState([])\n  const [show, showModal] = useState(false)\n  const [kelas, setKelas] = useState([])\n  const [detail, setDetail] = useState({})\n  useEffect(() => {\n    fetchData()\n    fetchKelas()\n  }, [])\n  const fetchKelas = async () => {\n    let response = await fetch(`${REST_URL}/pelatihan`)\n    response = await response.json()\n    setKelas(response)\n  }\n  const fetchData = async () => {\n    let response = await fetch(`${REST_URL}/jadwal`)\n    response = await response.json()\n    setData(response)\n  }\n  const tambahData = () => {\n    showModal(true)\n    setDetail({ aktif: 1 })\n  }\n  const editData = (index) => {\n    showModal(true)\n    setDetail(data[index])\n  }\n  const deleteData = async (index) => {\n    const { id, pelatihan } = data[index]\n    const confirmed = window.confirm(`Apakah anda yakin menghapus jadwal ${pelatihan}?`)\n    if (confirmed) {\n      await axios.delete(`${REST_URL}/jadwal/${id}`)\n      showModal(false)\n      fetchData()\n    }\n  }\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      if (!detail.pelatihan) {\n        return toast.error('Pilih kelas!')\n      }\n      console.log('submit', detail)\n      let { data } = await axios.post(`${REST_URL}/jadwal`, detail)\n      toast.success(data.message)\n      showModal(false)\n      fetchData()\n    } catch (error) {\n      toast.error(error.message)\n    }\n  }\n  const columns = [\n    {\n      Header: '', accessor: 'id', width: 110,\n      Cell: props => {\n        return <div>\n          <button className=\"btn px-2 py-0 text-success\" onClick={() => editData(props.index)}><IoMdCreate /></button>\n          <button className=\"btn px-2 py-0 text-danger\" onClick={() => deleteData(props.index)}><IoMdTrash /></button>\n        </div>\n      }\n    },\n    { Header: 'Kelas', accessor: 'pelatihan', width: 100 },\n    { Header: 'Hari', accessor: 'hari', width: 100 },\n    { Header: 'Tanggal', accessor: 'tanggal', width: 200 },\n    {\n      Header: 'Aktif', accessor: 'aktif', width: 200, Cell: props =>\n        <div className=\"text-center\">{props.value ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</div>\n    },\n\n  ]\n  const pagination = {\n    limit: 10\n  }\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"bg-primary\">\n              <big className=\"text-white\">Jadwal Pelatihan</big>\n              <Button variant=\"success\" className=\"btn-sm float-right\" onClick={() => tambahData()} >Tambah Baru</Button>\n            </Card.Header>\n            <ReactTable\n              data={data}\n              columns={columns}\n              minRows={pagination.limit}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Modal show={show} onHide={() => showModal(false)} size=\"lg\">\n        <Form onSubmit={onSubmit}>\n          <Modal.Header closeButton>\n            <Modal.Title>{detail.id ? 'Edit Jadwal' : 'Tambah Jadwal'}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Kelas<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'>\n                <Select\n                  className='p-0 form-control-sm'\n                  placeholder='Pilih kelas'\n                  options={kelas}\n                  value={[{ nama: detail.pelatihan, deskripsi: detail.pelatihan }]}\n                  onChange={(option) => {\n                    detail.pelatihan = option.nama\n                    setDetail({ ...detail })\n                  }}\n                  getOptionLabel={option => option.deskripsi}\n                  getOptionValue={option => option.nama}\n                  required={true}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Tanggal<span className='text-danger'>*</span></Form.Label>\n              <Col xs='9'>\n                <DatePicker\n                  className=\"form-control\"\n                  // showTimeSelect\n                  // timeFormat=\"HH:mm\"\n                  dateFormat=\"yyyy-MM-dd HH:mm\"\n                  selected={detail.tanggal ? dayjs(detail.tanggal)['$d'] : ''}\n                  onChange={(tgl) => {\n                    detail.tanggal = dayjs(tgl).format('YYYY-MM-DD HH:mm:ss')\n                    detail.hari = days[dayjs(detail.tanggal).format('d')]\n                    setDetail({ ...detail })\n                  }}\n                  injectTimes={[9, 20]}\n                  timeIntervals={15}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Hari<span className='text-danger'>*</span></Form.Label>\n              <Col xs='4' md='3' lg=\"2\">\n                <Form.Control\n                  className=\"capitalize \" size='sm' type='text' name='hari'\n                  value={detail.hari || ''} readOnly\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' xs='3'>Aktif<span className='text-danger'>*</span></Form.Label>\n              <Col xs='3'>\n                <Form.Check type=\"switch\" id=\"switch-status\" label=\"Aktif\"\n                  checked={detail.aktif ? true : false}\n                  onChange={e => {\n                    detail.aktif = e.target.checked ? 1 : 0\n                    setDetail(Object.assign({}, detail))\n                  }}\n                />\n              </Col>\n            </Form.Group>\n\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\"> Save Changes </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\n\nimport './App.scss'\nimport NotFound from 'pages/404'\nimport Header from 'components/header'\nimport Home from 'pages/home'\nimport Biodata from 'pages/biodata'\nimport Pembayaran from 'pages/pembayaran'\nimport Konfirmasi from 'pages/konfirmasi'\nimport Login from 'pages/login'\nimport Admin from 'admin/pendaftaran'\nimport Pelatihan from 'admin/pelatihan'\nimport Jadwal from 'admin/jadwal'\n\nconst AppRoute = ({ component: Component, ...rest }) => {\n  return <Route\n    {...rest} render={props => (\n      <div>\n        <Header />\n        <Component {...props} />\n      </div>\n    )}\n  />\n}\n\nconst AdminRoute = ({ component: Component, ...rest }) => {\n  const auth = useSelector(state => state.auth)\n  if (auth) {\n    return <AppRoute {...rest} component={Component} />\n  } else {\n    return <Route {...rest} render={props => <Redirect to={{ pathname: '/login', from: props.location }} />} />\n  }\n}\n\nclass AuthRouter extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <ToastContainer />\n        <Switch>\n          <AppRoute exact path='/' component={Home} />\n          <AppRoute path='/biodata' component={Biodata} />\n          <AppRoute path='/pembayaran' component={Pembayaran} />\n          <AppRoute path='/konfirmasi' component={Konfirmasi} />\n          <Route path='/login' component={Login} />\n\n          <AdminRoute path='/admin/pelatihan' component={Pelatihan} />\n          <AdminRoute path='/admin/jadwal' component={Jadwal} />\n          <AdminRoute exact path='/admin' component={Admin} />\n          <Route path='/404' component={NotFound} />\n          <Route render={() => <Redirect to='/404' />} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\nexport default AuthRouter\n","const INITIAL_STATE = {\n  auth: null,\n  jadwalTerpilih: {},\n  pelatihanTerpilih: {},\n  biodataPeserta: {},\n  pendaftaran: {}\n}\n\n// REDUCERS\nexport const rootReducer = (state = INITIAL_STATE, { type, data }) => {\n  switch (type) {\n    case 'LOGIN':\n      return Object.assign({}, state, { auth: data })\n    case 'LOGOUT':\n      return Object.assign({}, state, { auth: null })\n    case 'SET_JADWAL':\n      return Object.assign({}, state, { jadwalTerpilih: data })\n    case 'SET_PELATIHAN':\n      return Object.assign({}, state, { pelatihanTerpilih: data })\n    case 'SET_BIODATA':\n      return Object.assign({}, state, { biodataPeserta: data })\n    case 'KONFIRMASI':\n      return Object.assign({}, state, { pendaftaran: data })\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport 'react-toastify/dist/ReactToastify.css'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-table-v6/react-table.css'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport App from './App'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n// import logger from 'redux-logger'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { rootReducer } from './store.js'\n\nconst persistedReducer = persistReducer({ key: 'root', storage }, rootReducer)\nconst middleware = composeWithDevTools(applyMiddleware(thunk))\nconst store = createStore(persistedReducer, middleware)\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n  ,\n  document.getElementById('root')\n)\n\n// unregister() to register() below. Note this comes with some pitfalls.\nserviceWorker.unregister()\n"],"sourceRoot":""}