{"version":3,"sources":["serviceWorker.js","pages/404.js","components/header.js","pages/home.js","pages/biodata.js","pages/pembayaran.js","pages/konfirmasi.js","pages/login.js","admin/pendaftaranDetail.js","admin/pendaftaran.js","admin/pelatihan.js","admin/jadwal.js","App.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","NotFound","props","className","to","dispatch","useDispatch","auth","useSelector","state","Navbar","expand","Container","src","height","alt","Toggle","aria-controls","Collapse","id","user","Nav","onClick","type","REST_URL","process","history","useHistory","useState","pelatihan","setPelatihan","kelas","setKelas","jadwal","setJadwal","useEffect","fetchKelas","a","axios","get","data","findJadwal","nama","Row","Col","xs","sm","Card","Header","Body","Form","Control","as","onChange","e","filter","r","target","value","disabled","map","k","i","key","deskripsi","biaya","waktu","length","Table","responsive","size","borderless","kls","hari","tanggal","Button","variant","push","Papa","parsePromise","url","Promise","complete","error","parse","header","download","dynamicTyping","agama","defBio","email","jadwalTerpilih","pelatihanTerpilih","biodata","setBiodata","wilayah","setWilayah","requirement","setRequirement","fetchWilayah","console","log","prov","kab","kec","kel","d","enable","prasyarat","includes","provinsi","kabupaten","kecamatan","kelurahan","cekEmail","Object","assign","name","onChangeWilayah","getOptions","submitBiodata","preventDefault","bio","toast","post","message","success","onChangeFileUpload","files","formData","FormData","append","config","headers","status","filename","onSubmit","Group","Label","column","placeholder","defaultValue","required","phone","ktp","nisn","Check","inline","label","checked","gender","tempatLahir","dateFormat","selected","tanggalLahir","dayjs","date","format","agm","warga","alamat","options","getOptionLabel","option","getOptionValue","rt","rw","kodepos","ayah","ibu","req","ri","md","File","custom","toString","replace","nanoid","customAlphabet","daftarBank","rek","biodataPeserta","pendaftaran","bank","setBank","onBayar","payload","kode","peserta","bankTerpilih","ListGroup","b","Item","Footer","block","konfirmasi","setKonfirmasi","setStatus","sertifikatHtml","setSertifikat","onChangeKonfirmasi","onKonfirmasi","bukti","onClose","verifikasi","onCekSertifikat","kodeSertifikat","kodePelaut","params","body","keys","encodeURIComponent","join","fetch","method","mode","response","json","result","html","hasile","split","test","RegExp","test1","slice","pop","test2","code","pembayaran","dangerouslySetInnerHTML","__html","username","password","detail","show","setShow","fetchData","Modal","onHide","closeButton","buktiPembayaran","Image","roundedCircle","setDetail","setData","columns","accessor","width","Cell","index","minRows","showModal","onDelete","confirm","statusText","Title","isMulti","isSearchable","opt","days","deleteData","delete","active","tgl","injectTimes","timeIntervals","readOnly","AppRoute","Component","component","rest","render","AdminRoute","pathname","from","AuthRouter","exact","path","Home","Biodata","Pembayaran","Konfirmasi","Login","Pelatihan","Jadwal","Admin","React","INITIAL_STATE","persistedReducer","persistReducer","storage","middleware","composeWithDevTools","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.58e6fe0a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NotFound = (props) => {\n  return (\n    <div className='text-center text-white full-height'>\n      <div className='notFound'>\n        <h1>404 - Not Found</h1>\n        <Link to='/' className='btn btn-warning'>Kembali ke halaman utama</Link>\n      </div>\n    </div>\n  )\n}\nexport default NotFound\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Container, Navbar, Nav } from 'react-bootstrap'\n\nexport default () => {\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' })\n  }\n  return (\n    <div>\n      <Navbar expand='lg' className='navbar-dark bg-primary'>\n        <Container>\n          <Link className='navbar-brand' to='/'><img src='/img/logo.png' height='50' alt='' /></Link>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            {auth && auth.user ?\n              <Nav className='ml-auto'>\n                <Link to='/admin' className='nav-link'>Peserta</Link>\n                <Link to='/admin/pelatihan' className='nav-link'>Pelatihan</Link>\n                <Link to='/admin/jadwal' className='nav-link'>Jadwal</Link>\n                <Link to='#' className='nav-link' onClick={logout}>Logout</Link>\n              </Nav>\n              :\n              <Nav className='ml-auto'>\n                <Link to='/konfirmasi' className='nav-link'>Konfirmasi</Link>\n                <Link to='/login' className='nav-link'>Login</Link>\n              </Nav>\n            }\n\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <div className='bg-warning py-1'>\n        <div className='container text-center'>\n          <small>Kami membatalkan beberapa jadwal pelatihan untuk mengantisipasi COVID-19. Kamu tetap bisa mendaftar pelatihan secara online.</small>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Container, Row, Col, Card, Button, Form, Table } from 'react-bootstrap'\nimport axios from 'axios'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [pelatihan, setPelatihan] = useState({})\n  const [kelas, setKelas] = useState([])\n  const [jadwal, setJadwal] = useState([])\n\n  useEffect(() => { // componentDidMount\n    fetchKelas()\n  }, [])\n  const fetchKelas = async () => {\n    let { data } = await axios.get(`${REST_URL}/pelatihan`)\n    // if (pelatihan) {\n    //   const getpelatihan = data.filter(r => r.id == pelatihan.id)\n    //   if (getpelatihan.length) {\n    //     findJadwal(getpelatihan[0].nama)\n    //   }\n    // }\n    setKelas(data)\n  }\n  const onPilihProgram = (e) => {\n    const data = kelas.filter(r => r.id == e.target.value)[0]\n    setPelatihan(data)\n    dispatch({ type: 'SET_PELATIHAN', data })\n    findJadwal(data.nama)\n  }\n  const findJadwal = async (nama) => {\n    let { data } = await axios.get(`${REST_URL}/jadwal?pelatihan=${nama}`)\n    setJadwal(data)\n  }\n  const nextStep = (data) => {\n    dispatch({ type: 'SET_JADWAL', data })\n    history.push('/biodata')\n  }\n  return (\n    <div className='mt-4'>\n      <Container>\n        <Row>\n          <Col xs={12} sm={6}>\n            <Card className='p-0' >\n              <Card.Header className='bg-primary text-white text-center'>Pilih Program Pelatihan</Card.Header>\n              <Card.Body>\n                <Form.Control as='select' onChange={onPilihProgram} value={pelatihan.id || \"\"}>\n                  <option value='' disabled>--Pilih program</option>\n                  {kelas.map((k, i) => <option key={i} value={k.id}>({k.nama}) {k.deskripsi}</option>)}\n                </Form.Control>\n                <br />\n                {pelatihan && pelatihan.nama === 'BST' &&\n                  <div>\n                    <label className='primary'>Biaya</label>: <b className='text-primary'>{pelatihan.biaya}</b> <br />\n                    <label className='primary'>Waktu</label>: {pelatihan.waktu} hari\n                    <img src='/img/BST.jpg' className='rounded img-fluid' alt='bst' />\n                    <h5 className='mt-4'>Persyaratan:</h5>\n                    <div className='p-2'>\n                      1. Usia minimal 16 thn <br />\n                    2. FC KTP (2lbr) <br />\n                    3. Surat Keterangan Sehat dari Rumah Sakit yang ditunjuk oleh Dirjen Hubla <br />\n                    4. FC Ijazah Umum legalisir (2lbr) <br />\n                    5. FC Akta kelahiran (2lbr) <br />\n                    6. Foto warna terbaru ukuran 3×4 (2lbr) <br />\n                    </div>\n                  </div>}\n                {pelatihan && pelatihan.nama === 'AFF' &&\n                  <div>\n                    <label className='primary'>Biaya</label>: <b className='text-primary'>{pelatihan.biaya}</b> <br />\n                    <label className='primary'>Waktu</label>: {pelatihan.waktu} hari\n                    <img src='/img/AFF.jpg' className='rounded img-fluid' alt='aff' />\n                    <h5 className='mt-4'>Persyaratan:</h5>\n                    <div className='p-2'>\n                      1. Usia minimal 16 thn <br />\n                    2. FC sertifikat BST legalisir (2lbr) <br />\n                    3. FC KTP (2lbr) <br />\n                    4. Surat Keterangan Sehat dari Rumah Sakit yag ditunjuk oleh Dirjen Hubla <br />\n                    5. FC Ijazah Umum legalisir (2lbr) <br />\n                    6.FC Akta kelahiran (2lbr) <br />\n                    7. Foto warna terbaru ukuran 3×4 (2lbr) <br />\n                    </div>\n                  </div>}\n                {pelatihan && pelatihan.nama === 'MFA' &&\n                  <div>\n                    <label className='primary'>Biaya</label>: <b className='text-primary'>{pelatihan.biaya}</b> <br />\n                    <label className='primary'>Waktu</label>: {pelatihan.waktu} hari\n                    <img src='/img/MFA.jpg' className='rounded img-fluid' alt='mfa' />\n                    <h5 className='mt-4'>Persyaratan:</h5>\n                    <div className='p-2'>\n                      1. Usia minimal 16 thn <br />\n                    2. FC sertifikat BST legalisir (2lbr) <br />\n                    3. FC KTP (2lbr) <br />\n                    4. Surat Keterangan Sehat dari Rumah Sakit yag ditunjuk oleh Dirjen Hubla <br />\n                    5. FC Ijazah Umum legalisir (2lbr) <br />\n                    6. FC Akta kelahiran (2lbr) <br />\n                    7. Foto warna terbaru ukuran 3×4 (2lbr) <br />\n                    </div>\n                  </div>}\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6}>\n            {jadwal.length ?\n              <Card className='p-0'>\n                <Card.Header className='bg-primary text-white text-center'>Pilih Waktu Pelatihan</Card.Header>\n                <Card.Body>\n                  <Table responsive='sm' size='md' borderless>\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>Kelas</th>\n                        <th>Hari</th>\n                        <th>Tanggal</th>\n                        <th />\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {jadwal.map((kls, i) => (\n                        <tr key={i}>\n                          <td>{i + 1}</td>\n                          <td>{kls.pelatihan}</td>\n                          <td>{kls.hari}</td>\n                          <td>{kls.tanggal}</td>\n                          <td><Button size='sm' variant='primary' onClick={(e) => nextStep(kls)}>Pilih</Button></td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card> : null}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Container, Row, Col, Card, Button, Form } from 'react-bootstrap'\nimport DatePicker from 'react-datepicker'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\nimport { IoMdBook, IoMdCloudUpload, IoIosCloseCircleOutline, IoIosCheckmarkCircleOutline } from 'react-icons/io'\nimport Papa from 'papaparse'\nimport dayjs from 'dayjs'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nPapa.parsePromise = function (url) {\n  return new Promise(function (complete, error) {\n    Papa.parse(url, {\n      header: true,\n      download: true,\n      dynamicTyping: true,\n      complete,\n      error\n    })\n  })\n}\nconst formatNumber = (x) => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\nconst agama = ['islam', 'katholik', 'protestan', 'hindu', 'budha', 'khong hu chu']\nconst defBio = {\n  email: 'jack.hun@gmail.com',\n  // phone: '1028319283',\n  // ktp: '8129381923',\n  // nisn: '9123819283',\n  // nama: 'jack hun',\n  // gender: 'pria',\n  // warga: 'wni',\n  // agama: 'katholik',\n  // tempatLahir: 'surabaya',\n  // tanggalLahir: '1988-02-23',\n  // alamat: 'jl kenagan no.21',\n  // ayah: 'joe',\n  // ibu: 'melisa',\n}\n\nexport default () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const jadwalTerpilih = useSelector(state => state.jadwalTerpilih)\n  const pelatihanTerpilih = useSelector(state => state.pelatihanTerpilih)\n  const [biodata, setBiodata] = useState(defBio)\n  const [wilayah, setWilayah] = useState([])\n  const [requirement, setRequirement] = useState([])\n  useEffect(() => {\n    if (!jadwalTerpilih) {\n      return history.push('/')\n    }\n    fetchWilayah()\n  }, [])\n  const fetchWilayah = async () => {\n    console.log('fetchWilayah')\n    const prov = await Papa.parsePromise('/wilayah/provinsi.csv')\n    const kab = await Papa.parsePromise('/wilayah/kabupaten.csv')\n    const kec = await Papa.parsePromise('/wilayah/kecamatan.csv')\n    const kel = await Papa.parsePromise('/wilayah/kelurahan.csv')\n    let { data } = await axios.get('/requirement.json')\n    if (pelatihanTerpilih) {\n      for (const d of data) {\n        d.enable = pelatihanTerpilih.prasyarat.includes(d.id)\n      }\n    }\n    setRequirement(data)\n    setWilayah({ provinsi: prov.data, kabupaten: kab.data, kecamatan: kec.data, kelurahan: kel.data })\n  }\n  const cekEmail = async () => {\n    let { data } = await axios.get(`${REST_URL}/peserta?email=${biodata.email}`)\n    if (data.length) {\n      data[0].provinsi = null\n      data[0].kabupaten = null\n      data[0].kecamatan = null\n      data[0].kelurahan = null\n      setBiodata(Object.assign({}, data[0]))\n    }\n  }\n  const onChange = async (e) => {\n    const { name, value } = e.target\n    biodata[name] = value\n    setBiodata(Object.assign({}, biodata))\n  }\n  const onChangeDatepicker = (key, value) => {\n    biodata[key] = dayjs(value).format('YYYY-MM-DD')\n    setBiodata(Object.assign({}, biodata))\n  }\n  const onChangeWilayah = (key, value) => {\n    biodata[key] = value\n    setBiodata(Object.assign({}, biodata))\n  }\n  const getOptions = (key, value) => {\n    if (key === 'kabupaten') {\n      return wilayah.kabupaten.filter(r => r.provinsi === value.id)\n    }\n    if (key === 'kecamatan') {\n      return wilayah.kecamatan.filter(r => r.kabupaten === value.id)\n    }\n    if (key === 'kelurahan') {\n      return wilayah.kelurahan.filter(r => r.kecamatan === value.id)\n    }\n    return []\n  }\n\n  const submitBiodata = async (e) => {\n    e.preventDefault()\n    const bio = Object.assign({}, biodata)\n\n    if (!biodata.provinsi) { return toast.error('Provinsi harus diisi') }\n    if (!biodata.kabupaten) { return toast.error('Kabupaten harus diisi') }\n    if (!biodata.kecamatan) { return toast.error('Kecamatan harus diisi') }\n    if (!biodata.kelurahan) { return toast.error('Kelurahan harus diisi') }\n\n    bio.provinsi = biodata.provinsi.name\n    bio.kabupaten = biodata.kabupaten.name\n    bio.kecamatan = biodata.kecamatan.name\n    bio.kelurahan = biodata.kelurahan.name\n\n    let { data } = await axios.post(`${REST_URL}/peserta`, bio)\n    dispatch({ type: 'SET_BIODATA', data: biodata })\n    const message = data.message === 'CREATED' ? 'ditambahkan' : 'diperbahrui'\n    toast.success(`Data telah berhasil ${message}.`)\n  }\n  const onChangeFileUpload = async (e) => {\n    const { files, name } = e.target\n    setBiodata(Object.assign({}, { ...biodata, [name]: null }))\n    if (biodata.id && files[0]) {\n      const formData = new FormData()\n      formData.append('file', files[0])\n      formData.append('id', biodata.id)\n      formData.append('name', name)\n      const config = { headers: { 'content-type': 'multipart/form-data' } }\n      const { status, data } = await axios.post(`${REST_URL}/peserta/upload`, formData, config)\n      if (status === 200) {\n        setBiodata(Object.assign({}, { ...biodata, [name]: data.filename }))\n      }\n    }\n  }\n  const nextStep = () => {\n    for (const r of requirement) {\n      if (biodata[r.name] === null) {\n        toast.error(`Dokumen \"${r.label}\" tidak lengkap`)\n      } else {\n        dispatch({ type: 'SET_BIODATA', data: biodata })\n        dispatch({ type: 'KONFIRMASI', data: null })\n        history.push('/pembayaran')\n      }\n    }\n  }\n\n  return (\n    <div className='py-4'>\n      <Container>\n        <Row className='my-2'>\n          <Col xs={12} sm={8}>\n            <Form onSubmit={submitBiodata}>\n              <Card className='p-0'>\n                <Card.Header className='bg-primary text-white'><IoMdBook /> &nbsp; Data Peserta</Card.Header>\n                <Card.Body>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Email <span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control size='sm' type='email' name='email' placeholder='alamat email' onChange={onChange} defaultValue={biodata.email || ''} required /></Col>\n                    <Col sm={6}><Button size=\"sm\" onClick={cekEmail}>Cek by Email</Button></Col>\n                  </Form.Group>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> HP <span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control size='sm' type='text' name='phone' placeholder='nomor handphone' onChange={onChange} defaultValue={biodata.phone || ''} required /></Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> ID KTP/NIK<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='ktp' placeholder='nomor ktp (nik)' onChange={onChange} defaultValue={biodata.ktp || ''} required /></Col>\n                  </Form.Group>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> NISN<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='nisn' placeholder='nomor nisn' onChange={onChange} defaultValue={biodata.nisn || ''} required /></Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Nama<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='nama' placeholder='nama lengkap' onChange={onChange} defaultValue={biodata.nama || ''} required /></Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='3'> Jenis Kelamin<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'>\n                      <div className='mb-3'>\n                        <Form.Check inline type='radio' name='gender' value='pria' label='Pria' id='radio-pria' checked={biodata.gender === 'pria'} onChange={onChange} />\n                        <Form.Check inline type='radio' name='gender' value='wanita' label='Wanita' id='radio-wanita' checked={biodata.gender === 'wanita'} onChange={onChange} />\n                      </div>\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> TTL<span className='text-danger'>*</span></Form.Label>\n                    <Col sm={5}><Form.Control size='sm' name='tempatLahir' placeholder='tempat lahir' onChange={onChange} defaultValue={biodata.tempatLahir || ''} required /></Col>\n                    <Col sm={4}><DatePicker\n                      dateFormat=\"dd-MM-yyyy\"\n                      className='form-control form-control-sm'\n                      selected={biodata.tanggalLahir ? dayjs(biodata.tanggalLahir)['$d'] : ''}\n                      onChange={(date) => onChangeDatepicker('tanggalLahir', date)}\n                    />\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Agama<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='5'>\n                      <Form.Control size='sm' as='select' name='agama' onChange={onChange} value={biodata.agama || ''} required className='capitalize'>\n                        <option value='' disabled>--Pilih Agama</option>\n                        {agama.map((agm, i) => <option key={agm} value={agm}>{agm}</option>)}\n                      </Form.Control>\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='3'> Kewarganegaraan<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'>\n                      <div className='mb-3'>\n                        <Form.Check inline type='radio' name='warga' value='wni' label='WNI' id='radio-wni' checked={biodata.warga === 'wni'} onChange={onChange} />\n                        <Form.Check inline type='radio' name='warga' value='wna' label='WNA' id='radio-wna' checked={biodata.warga === 'wna'} onChange={onChange} />\n                      </div>\n                    </Col>\n                  </Form.Group>\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Alamat<span className='text-danger'>*</span></Form.Label>\n                    <Col sm='9'><Form.Control size='sm' type='text' name='alamat' placeholder='nama jalan / no. rumah' onChange={onChange} defaultValue={biodata.alamat || ''} required /></Col>\n                  </Form.Group>\n                  {\n                    wilayah.provinsi && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Provinsi<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih provinsi'\n                          options={wilayah.provinsi}\n                          value={[{ name: biodata.provinsi && biodata.provinsi.name }]}\n                          onChange={e => onChangeWilayah('provinsi', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    wilayah.kabupaten && biodata.provinsi && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kabupaten<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih kabupaten'\n                          options={getOptions('kabupaten', biodata.provinsi)}\n                          value={[{ name: biodata.kabupaten && biodata.kabupaten.name }]}\n                          onChange={(e) => onChangeWilayah('kabupaten', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    wilayah.kecamatan && biodata.kabupaten && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kecamatan<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih kecamatan'\n                          options={getOptions('kecamatan', biodata.kabupaten)}\n                          value={[{ name: biodata.kecamatan && biodata.kecamatan.name }]}\n                          onChange={(e) => onChangeWilayah('kecamatan', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    wilayah.kelurahan && biodata.kecamatan && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kelurahan<span className='text-danger'>*</span></Form.Label>\n                      <Col sm='9'>\n                        <Select\n                          className='p-0 form-control-sm custom-select'\n                          placeholder='Pilih kelurahan'\n                          options={getOptions('kelurahan', biodata.kecamatan)}\n                          value={[{ name: biodata.kelurahan && biodata.kelurahan.name }]}\n                          onChange={(e) => onChangeWilayah('kelurahan', e)}\n                          getOptionLabel={option => option.name}\n                          getOptionValue={option => option.id}\n                        />\n                      </Col>\n                    </Form.Group>\n                  }\n                  {\n                    biodata.kelurahan && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> RT/RW <span className='text-danger'>*</span></Form.Label>\n                      <Col sm={4}><Form.Control type='number' size='sm' name='rt' placeholder='rt' onChange={onChange} defaultValue={biodata.rt || ''} required /></Col>\n                      <Col sm={4}><Form.Control type='number' size='sm' name='rw' placeholder='rw' onChange={onChange} defaultValue={biodata.rw || ''} required /></Col>\n                    </Form.Group>\n                  }\n                  {\n                    biodata.rt && biodata.rw && <Form.Group as={Row}>\n                      <Form.Label column='sm' sm='2'> Kodepos <span className='text-danger'>*</span></Form.Label>\n                      <Col sm={5}><Form.Control size='sm' name='kodepos' placeholder='kodepos' onChange={onChange} defaultValue={biodata.kodepos || ''} required /></Col>\n                    </Form.Group>\n                  }\n\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Ayah<span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control type='text' size='sm' name='ayah' placeholder='nama ayah' onChange={onChange} defaultValue={biodata.ayah || ''} required /></Col>\n                  </Form.Group>\n                  <Form.Group as={Row}>\n                    <Form.Label column='sm' sm='2'> Ibu<span className='text-danger'>*</span></Form.Label>\n                    <Col sm={4}><Form.Control type='text' size='sm' name='ibu' placeholder='nama ibu' onChange={onChange} defaultValue={biodata.ibu || ''} required /></Col>\n                  </Form.Group>\n                  <Button variant='primary' className='float-right' type=\"submit\">{biodata.id ? 'Update' : 'Simpan'}</Button>\n                </Card.Body>\n              </Card>\n            </Form>\n            {biodata.id &&\n              <Card className='mt-4'>\n                <Card.Header className='bg-primary text-white'><IoMdCloudUpload /> &nbsp; Upload Dokumen</Card.Header>\n                <Card.Body>\n                  <small className=\"text-primary\">\n                    <i>*tanda <IoIosCheckmarkCircleOutline className=\"text-success\" />, dokumen sudah berhasil diupload</i><br />\n                    <i>*tanda <IoIosCloseCircleOutline className=\"text-danger\" />, dokumen harus diupload ulang</i><br />\n                  </small>\n                  <br />\n                  {requirement.map((req, ri) => {\n                    return req.enable && <Form.Group as={Row} key={ri}>\n                      <Col md={11} xs={10}>\n                        <Form.File type=\"file\" name={req.name} onChange={onChangeFileUpload} custom\n                          label={req.label} />\n                      </Col>\n                      <Col md={1} xs={2}>\n                        <big className=\"mt-2\" >{biodata[req.name] ?\n                          <IoIosCheckmarkCircleOutline className=\"text-success\" />\n                          : <IoIosCloseCircleOutline className=\"text-danger\" />}</big>\n                      </Col>\n                    </Form.Group>\n                  })}\n                  <Button variant='primary' className='float-right' onClick={nextStep}>Lanjutkan</Button>\n                </Card.Body>\n              </Card>\n            }\n          </Col>\n          <Col xs={12} sm={4}>\n            {pelatihanTerpilih && jadwalTerpilih ?\n              <Card className='p-0'>\n                <Card.Body>\n                  <span>Program yang telah anda pilih:</span>\n                  <hr />\n                  <label>Kelas: </label><span className='float-right text-primary'>{pelatihanTerpilih.nama}</span> <br />\n                  <label>Biaya: </label><span className='float-right text-primary'>{formatNumber(pelatihanTerpilih.biaya)}</span> <br />\n                  <label>Waktu: </label><span className='float-right text-primary'>{jadwalTerpilih.tanggal}</span> <br />\n                </Card.Body>\n              </Card>\n              : null}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Container, Row, Col, Card, ListGroup, Form, Button } from 'react-bootstrap'\nimport { toast } from 'react-toastify'\nimport { customAlphabet } from 'nanoid'\nconst nanoid = customAlphabet('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ', 10)\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nconst daftarBank = [\n  { id: 'mandiri', label: 'Mandiri', rek: '101.00.98300.997', nama: 'Dompet Dhuafa' },\n  { id: 'bca', label: 'BCA', rek: '237.301.8881', nama: 'Dompet Dhuafa' },\n  { id: 'bni', label: 'BNI', rek: '000.530.2291', nama: 'Dompet Dhuafa' },\n  { id: 'muamalat', label: 'Muamalat', rek: '301.001.5515', nama: 'Dompet Dhuafa' },\n]\nexport default (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const jadwalTerpilih = useSelector(state => state.jadwalTerpilih)\n  const pelatihanTerpilih = useSelector(state => state.pelatihanTerpilih)\n  const biodataPeserta = useSelector(state => state.biodataPeserta)\n  const pendaftaran = useSelector(state => state.pendaftaran)\n  const [bank, setBank] = useState(null)\n\n  useEffect(() => { }, [])\n\n  const onChange = (e) => {\n    setBank(e.target.value)\n  }\n  const onBayar = async () => {\n    const message = <div>Kami telah mengirim invoice ke alamat email {biodataPeserta.email}. Segera lakukan pembayaran agar dapat diproses oleh admin.</div>\n    const payload = {\n      kode: nanoid(),\n      pelatihan: pelatihanTerpilih.id,\n      jadwal: jadwalTerpilih.id,\n      peserta: biodataPeserta.id,\n      bank: bank,\n    }\n    let { data } = await axios.post(`${REST_URL}/pendaftaran`, payload)\n    if (data) {\n      toast.success(message/* , { onClose: () =>  } */)\n      dispatch({ type: 'KONFIRMASI', data: payload })\n      dispatch({ type: 'SET_JADWAL', data: {} })\n      dispatch({ type: 'SET_PELATIHAN', data: {} })\n      dispatch({ type: 'SET_BIODATA', data: {} })\n    }\n\n  }\n  const bankTerpilih = pendaftaran && pendaftaran.bank ? daftarBank.filter(r => r.id === pendaftaran.bank)[0] : {}\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col xs={12} sm={4}>\n          <div>\n            <Card className='p-0'>\n              <Card.Body>\n                <span>Detail Peserta:</span>\n                <hr />\n                <label>Nama: </label><span className='float-right text-primary capitalize'>{biodataPeserta.nama || ''}</span> <br />\n                <label>Email: </label><span className='float-right text-primary'>{biodataPeserta.email || ''}</span> <br />\n                <label>Handphone: </label><span className='float-right text-primary'>{biodataPeserta.phone || ''}</span> <br />\n              </Card.Body>\n            </Card>\n            <Card className='p-0 mt-4'>\n              <Card.Body>\n                <span>Program yang telah anda pilih:</span>\n                <hr />\n                <label>Kelas: </label><span className='float-right text-primary'>{pelatihanTerpilih.nama}</span> <br />\n                <label>Biaya: </label><span className='float-right text-primary'>{pelatihanTerpilih.biaya}</span> <br />\n                <label>Waktu: </label><span className='float-right text-primary'>{jadwalTerpilih.tanggal}</span> <br />\n              </Card.Body>\n            </Card>\n          </div>\n        </Col>\n        <Col>\n          {pendaftaran ?\n            <Card>\n              <Card.Header className=\"bg-primary text-white\">Pilih metode pembayaran</Card.Header>\n              <Card.Body>\n                <p>\n                  Silahkan lakukan pembayaran ke: <br />\n                  Bank: <b className=\"text-primary\">{bankTerpilih.label}</b> <br />\n                  A/N: <b className=\"text-primary\">{bankTerpilih.nama}</b> <br />\n                  REK: <b className=\"text-primary\">{bankTerpilih.rek}</b> <br />\n                  <br />\n                  KODE PEMBAYARAN: <b className=\"text-primary\">{pendaftaran.kode}</b> <br />\n                  <br />\n                  <i className=\"text-danger\">* Cantumkan kode pembayaran di bagian deskripsi transfer</i><br />\n                  <i className=\"text-danger\">* Copy paste kode unik untuk melakukan konfirmasi</i>\n                </p>\n                <Button onClick={() => history.push('/konfirmasi')}>Konfirmasi</Button>\n              </Card.Body>\n            </Card>\n            :\n            <Card>\n              <Card.Header className=\"bg-primary text-white\">Pilih metode pembayaran</Card.Header>\n              <ListGroup>\n                {daftarBank ? daftarBank.map((b, i) =>\n                  <ListGroup.Item key={i}>\n                    <Form.Check name=\"bank\" custom type=\"radio\" id={b.id} value={b.id} onChange={onChange}\n                      label={\n                        <div>\n                          <img height=\"12\" src={`https://ecs7.tokopedia.net/img/toppay/sprites/${b.id}.png`} alt=\"\" />\n                          <span className=\"ml-3\">{b.label}</span>\n                        </div>\n                      } />\n                  </ListGroup.Item>\n                ) : null}\n              </ListGroup>\n              {bank && <Card.Footer><Button block variant=\"primary\" onClick={onBayar}>Bayar</Button> </Card.Footer>}\n            </Card>\n          }\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\n// import { useSelector } from 'react-redux'\n// import { useHistory, Link } from 'react-router-dom'\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap'\nimport { toast } from 'react-toastify'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default (props) => {\n  // const history = useHistory()\n  const [konfirmasi, setKonfirmasi] = useState({})\n  const [status, setStatus] = useState({})\n  const [sertifikatHtml, setSertifikat] = useState(null)\n  useEffect(() => { }, [])\n  const onChangeKonfirmasi = (e) => {\n    if (e.target.files) {\n      konfirmasi[e.target.name] = e.target.files[0]\n    } else {\n      konfirmasi[e.target.name] = e.target.value\n    }\n    setKonfirmasi(Object.assign({}, konfirmasi))\n  }\n  const onKonfirmasi = async (e) => {\n    e.preventDefault()\n    const { kode, bukti } = konfirmasi\n    const formData = new FormData();\n    formData.append('file', bukti)\n    formData.append('kode', kode)\n    const config = { headers: { 'content-type': 'multipart/form-data' } }\n    const { status } = await axios.post(`${REST_URL}/konfirmasi`, formData, config)\n    if (status === 200) {\n      const message = <div>Kami akan lakukan verifikasi pembayaran anda. Terima kasih.</div>\n      toast.success(message, {\n        onClose: () => setKonfirmasi({})\n      })\n    }\n  }\n  const onCekStatus = (e) => {\n    e.preventDefault()\n    const { code } = e.target\n    console.log('onCekStatus')\n    setStatus({ code, biodata: true, pembayaran: false })\n  }\n  const verifikasi = (status) => {\n    console.log(status)\n    return <span className={`text-${status ? 'success' : 'danger'}`}>{status ? 'OK' : 'GAGAL'}</span>\n  }\n  const onCekSertifikat = async (e) => {\n    e.preventDefault(e)\n    try {\n      const { kodeSertifikat, kodePelaut } = e.target\n      let params = { \"sentdata[0][basepath]\": \"/\", \"sentdata[0][captcha]\": \"\" }\n      if (kodePelaut.value) {\n        params[\"sentdata[0][stringtofind]\"] = kodePelaut.value\n        params[\"sentdata[0][searchmode]\"] = \"1\"\n      }\n      if (kodeSertifikat.value) {\n        params[\"sentdata[0][stringtofind]\"] = kodeSertifikat.value\n        params[\"sentdata[0][searchmode]\"] = \"2\"\n      }\n      const body = Object.keys(params).map((key) => {\n        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      }).join('&')\n      const response = await fetch('https://pelaut.dephub.go.id/webapp/finddata', {\n        method: 'POST',\n        mode: 'cors',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },\n        body\n      })\n      if (kodeSertifikat) {\n        if (response.type !== 'type:opaque') {\n          const result = await response.json()\n          let html = result.hasile.split('\\t')\n          const test = html[1].match(new RegExp(/src='.*.g'/))\n          const test1 = test[0].split('/').slice(-1).pop().replace(\"'\", '')\n          const test2 = html[1].replace(/src='.*'/, `src='https://pelaut.dephub.go.id/asset/images/${test1}'/`)\n          html[1] = test2 + `</div><div class='col-lg-8'>`\n          setSertifikat(html.join('\\t'))\n        }\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  return (\n    <Container>\n      <Row>\n        <Col xs={12} md={6}>\n          <br />\n          <Card>\n            <Card.Header className=\"bg-warning\"> Konfirmasi pembayaran </Card.Header>\n            <Card.Body>\n              <Form name=\"konfirmasi\" onSubmit={onKonfirmasi}>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm='4'>Kode Pendaftaran<span className='text-danger'>*</span></Form.Label>\n                  <Col sm='8'><Form.Control size='sm' type='text' name='kode' placeholder='kode pendaftaran'\n                    onChange={onChangeKonfirmasi} value={konfirmasi.kode || ''} required /></Col>\n                </Form.Group>\n                <Form.Group>\n                  <Form.File type=\"file\" name=\"bukti\" onChange={onChangeKonfirmasi} custom\n                    label={konfirmasi.bukti ? konfirmasi.bukti.name : 'Upload bukti pembayaran'} />\n                </Form.Group>\n                <Button type=\"submit\">Kirimkan</Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xs={12} md={6}>\n          <br />\n          <Card>\n            <Card.Header className=\"bg-warning\"> Cek status peserta </Card.Header>\n            <Card.Body>\n              <Form name=\"konfirmasi\" onSubmit={onCekStatus}>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm='4'>Kode Daftar<span className='text-danger'>*</span></Form.Label>\n                  <Col sm='8'><Form.Control size='sm' type='text' name='code' placeholder='kode pendaftaran' required /></Col>\n                </Form.Group>\n                <Button type=\"submit\">Cari</Button>\n              </Form>\n              <br />\n              {status && status.code && <div>\n                <li>Verifikasi Biodata: {verifikasi(status.biodata || false)} </li>\n                <li>Verifikasi Pembayaran: {verifikasi(status.pembayaran || false)} </li>\n              </div>}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12} md={12}>\n          <br />\n          <Card>\n            <Card.Header className=\"bg-warning\">Verifikasi Pelaut & Sertifikat</Card.Header>\n            <Card.Body>\n              <Form name=\"konfirmasi\" onSubmit={onCekSertifikat}>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm='4'>Kode Sertifikat<span className='text-danger'>*</span></Form.Label>\n                  <Col sm='6'><Form.Control size='sm' type='text' name='kodeSertifikat' placeholder='kode sertifikat' /* defaultValue=\"6200597510012420\" */ /></Col>\n                </Form.Group>\n                <Form.Group as={Row}>\n                  <Form.Label column='sm' sm='4'>Kode Pelaut<span className='text-danger'>*</span></Form.Label>\n                  <Col sm='6'><Form.Control size='sm' type='text' name='kodePelaut' placeholder='kode pelaut' /* defaultValue=\"6200597510\" */ /></Col>\n                </Form.Group>\n                <Button type=\"submit\">Cari</Button>\n              </Form>\n              <br />\n              {sertifikatHtml && <div dangerouslySetInnerHTML={{ __html: (sertifikatHtml || '') }}></div>}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container >\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Card } from 'react-bootstrap'\n\nexport default (props) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n  useEffect(() => {\n    if (auth && auth.user === 'Administrator') {\n      history.push('/admin')\n    }\n  })\n  const onSubmit = (e) => {\n    e.preventDefault()\n    const { username, password } = e.target\n    console.log(username.value, password.value)\n    if (username.value === 'admin' && password.value === '1234') {\n      dispatch({ type: 'LOGIN', data: { user: 'Administrator' } })\n      history.push('/admin')\n    }\n  }\n  return (\n    <Container className='mt-4 full-height'>\n      <Card className='col-6'>\n        <Card.Body>\n          <form onSubmit={onSubmit} method='post' className='py-4'>\n            <h3 className='text-center'>Login</h3>\n            <label className='grey-text font-weight-light'>Username</label>\n            <input type='text' name='username' className='form-control' required />\n            <br />\n            <label className='grey-text font-weight-light'>Password</label>\n            <input type='password' name='password' className='form-control' required />\n            <br/>\n            demo: admin/1234\n            <div className='mt-4 mb-5'>\n              <Link to='/' className='btn btn-secondary float-left'>Pendaftaran<i className='fa fa-paper-plane-o ml-2' /></Link>\n              <button className='btn btn-primary float-right' type='submit'>Login<i className='fa fa-paper-plane-o ml-2' /></button>\n            </div>\n          </form>\n        </Card.Body>\n      </Card>\n    </Container>\n  )\n}\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Row, Col, Modal, Image } from 'react-bootstrap'\n// import { IoMdEye, IoMdCreate, IoMdTrash, IoMdClose, IoMdCheckmark } from 'react-icons/io'\n// import Image from 'components/image'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default ({ detail, show, setShow }) => {\n  const [requirement, setRequirement] = useState([])\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n\n    let { data } = await axios.get('/requirement.json')\n    setRequirement(data)\n  }\n  return (\n    <Modal show={show} onHide={() => setShow(false)} size=\"lg\">\n      <Modal.Header closeButton>\n      </Modal.Header>\n      <Modal.Body>\n        {/* <label>{detail.nama || ''}</label> */}\n\n      </Modal.Body>\n      <Modal.Footer>\n        <Row>\n          {detail.buktiPembayaran &&\n            <Col md={6}>\n              <Image src={`${REST_URL}/upload/pembayaran/${detail.buktiPembayaran}`} />\n              <label>Bukti Pembayaran</label>\n            </Col>\n          }\n        </Row>\n        <br />\n        <Row>\n          {requirement && requirement.map(req => <div>\n            <Col xs={2}>\n              <Image src={`${REST_URL}/upload/dokumen/${detail[req.name]}`} roundedCircle />\n              <label>{req.id}</label>\n            </Col>\n          </div>)}\n        </Row>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport ReactTable from 'react-table-v6'\nimport { Container, Row, Col, Card, Button, Modal, Form } from 'react-bootstrap'\nimport { IoMdEye, IoMdCreate, IoMdTrash, IoMdClose, IoMdCheckmark } from 'react-icons/io'\nimport Detail from './pendaftaranDetail'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nexport default (props) => {\n  const [show, setShow] = useState(false)\n  const [detail, setDetail] = useState(null)\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n    let response = await fetch(REST_URL + '/pendaftaran')\n    response = await response.json()\n    setData(response)\n  }\n  const detailData = (index) => {\n    setShow(true)\n    setDetail(data[index])\n  }\n\n  const columns = [\n    {\n      Header: '', accessor: 'id', width: 110,\n      Cell: props => <button className=\"btn px-2 py-0 text-success\" onClick={() => detailData(props.index)}><IoMdEye /></button>\n    },\n    { Header: 'Nama', accessor: 'peserta', Cell: props => <span className=\"capitalize\">{props.value}</span> },\n    { Header: 'Bank', accessor: 'bank' },\n    { Header: 'Pelatihan', accessor: 'pelatihan' },\n    { Header: 'Biaya', accessor: 'biaya' },\n    {\n      Header: 'Biodata', accessor: 'cekBiodata',\n      Cell: props => <div className=\"text-center\">{props.value ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</div>\n    },\n    {\n      Header: 'Pembayaran', accessor: 'cekPembayaran',\n      Cell: props => <div className=\"text-center\">{props.value ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</div>\n    },\n\n  ]\n  const pagination = { limit: 10 }\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"bg-primary\">\n              <big className=\"text-white\">Daftar Peserta</big>\n              {/* <Button variant=\"success\" className=\"float-right\" onClick={() => tambahData()} >Tambah Baru</Button> */}\n            </Card.Header>\n            <ReactTable\n              data={data}\n              columns={columns}\n              minRows={pagination.limit}\n            />\n          </Card>\n        </Col>\n      </Row>\n      {show && <Detail show={show} setShow={setShow} detail={detail} />}\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport ReactTable from 'react-table-v6'\nimport { Container, Row, Col, Card, Button, Modal, Form } from 'react-bootstrap'\nimport { IoMdCreate, IoMdTrash } from 'react-icons/io'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nconst requirement = [\n  { nama: \"BST\", deskripsi: \"Setifikat BST\" },\n  { nama: \"AFF\", deskripsi: \"Setifikat AFF\" },\n  { nama: \"MFA\", deskripsi: \"Setifikat MFA\" },\n  { nama: \"KTP\", deskripsi: \"Nomor Induk Kewarganegaraan (NIK)\" },\n  { nama: \"SKES\", deskripsi: \"Surat Keterangan Sehat dari Rumah Sakit yang ditunjuk oleh Dirjen Hubla\" },\n  { nama: \"IJAZAH\", deskripsi: \"Ijazah Umum legalisir\" },\n  { nama: \"AKTE\", deskripsi: \"Akta kelahiran\" },\n  { nama: \"FOTO\", deskripsi: \"Foto warna terbaru ukuran 3×4\" },\n]\nconst formatNumber = (x) => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\nexport default (props) => {\n  const [data, setData] = useState([])\n  const [show, showModal] = useState(false)\n  const [detail, setDetail] = useState({})\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n    let response = await fetch(REST_URL + '/pelatihan')\n    response = await response.json()\n    setData(response)\n  }\n  const tambahData = () => {\n    showModal(true)\n    setDetail({})\n  }\n  const editData = (index) => {\n    showModal(true)\n    setDetail(data[index])\n  }\n  const onChange = (e) => {\n    detail[e.target.name] = e.target.value\n    setDetail(detail)\n  }\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      let response = await axios.post(REST_URL + '/pelatihan', detail)\n      if (response.message) {\n      } else {\n        showModal(false)\n        fetchData()\n      }\n    } catch (error) {\n      toast.error(error.message)\n    }\n  }\n  const onDelete = async (index) => {\n    const { id, nama } = data[index]\n    const confirmed = window.confirm(`Apakah anda yakin menghapus pelatihan ${nama}?`)\n    if (confirmed) {\n      let response = await fetch(REST_URL + '/pelatihan/' + id, {\n        method: 'DELETE',\n      })\n      if (response.statusText === \"OK\") {\n        showModal(false)\n        fetchData()\n      }\n    }\n  }\n\n  const columns = [\n    {\n      Header: '', accessor: 'id', width: 100,\n      Cell: props => {\n        return <div>\n          <button className=\"btn px-2 py-0 text-success\" onClick={() => editData(props.index)}><IoMdCreate /></button>\n          <button className=\"btn px-2 py-0 text-danger\" onClick={() => onDelete(props.index)}><IoMdTrash /></button>\n        </div>\n      }\n    },\n    { Header: 'Nama', accessor: 'nama', width: 100 },\n    { Header: 'Deskripsi', accessor: 'deskripsi', width: 200 },\n    { Header: 'Waktu', accessor: 'waktu', width: 80, Cell: props => props.value + ' hari' },\n    { Header: 'Biaya', accessor: 'biaya', width: 100, Cell: props => formatNumber(props.value) },\n    { Header: 'Prasyarat', accessor: 'prasyarat', Cell: props => props.value.join(', ') },\n\n  ]\n  const pagination = {\n    limit: 10\n  }\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"bg-primary\">\n              <big className=\"text-white\">Daftar Pelatihan</big>\n              <Button size=\"sm\" variant=\"success\" className=\"float-right\" onClick={() => tambahData()} >Tambah Baru</Button>\n            </Card.Header>\n            <ReactTable\n              data={data}\n              columns={columns}\n              minRows={pagination.limit}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Modal show={show} onHide={() => showModal(false)} size=\"lg\">\n        <Form onSubmit={onSubmit}>\n          <Modal.Header closeButton>\n            <Modal.Title>{detail ? detail.nama : 'Data Pelatihan'}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group as={Row}>\n              <Form.Label column='sm' sm='3'>Nama<span className='text-danger'>*</span></Form.Label>\n              <Col sm='9'><Form.Control size='sm' type='text' name='nama' onChange={onChange} defaultValue={detail.nama || ''} required /></Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' sm='3'>Deskripsi<span className='text-danger'>*</span></Form.Label>\n              <Col sm='9'><Form.Control size='sm' type='text' name='deskripsi' onChange={onChange} defaultValue={detail.deskripsi || ''} required /></Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' sm='3'>Waktu<span className='text-danger'>*</span></Form.Label>\n              <Col xs='4' sm=\"2\"><Form.Control size='sm' type='number' name='waktu' onChange={onChange} defaultValue={detail.waktu || ''} required /></Col>\n              <Col xs='3'>hari</Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' sm='3'>Biaya<span className='text-danger'>*</span></Form.Label>\n              <Col sm='9'><Form.Control size='sm' type='number' name='biaya' onChange={onChange} defaultValue={detail.biaya || ''} required /></Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' sm='3'>Prasyarat<span className='text-danger'>*</span></Form.Label>\n              <Col sm='9'>\n                <Select\n                  isMulti\n                  isSearchable\n                  className='p-0 form-control-sm'\n                  placeholder='Pilih persyaratan'\n                  options={requirement}\n                  value={detail.prasyarat && detail.prasyarat.map(option => ({ nama: option, deskripsi: option }))}\n                  onChange={opt => {\n                    detail.prasyarat = opt ? opt.map(r => r.nama) : []\n                    setDetail(Object.assign({}, detail))\n                  }}\n                  getOptionLabel={option => option.deskripsi}\n                  getOptionValue={option => option.nama}\n                />\n              </Col>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\"> Save Changes </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport dayjs from 'dayjs'\nimport ReactTable from 'react-table-v6'\nimport { Container, Row, Col, Card, Button, Modal, Form } from 'react-bootstrap'\nimport { IoMdCreate, IoMdTrash, IoMdCheckmark, IoMdClose } from 'react-icons/io'\nimport Select from 'react-select'\nimport DatePicker from 'react-datepicker'\nimport { toast } from 'react-toastify'\n\nconst REST_URL = process.env.REACT_APP_REST_URL\nconst days = ['minggu', 'senin', 'selasa', 'rabu', 'kamis', 'jumat', 'sabtu']\nexport default (props) => {\n  const [data, setData] = useState([])\n  const [show, showModal] = useState(false)\n  const [kelas, setKelas] = useState([])\n  const [detail, setDetail] = useState({})\n  useEffect(() => {\n    fetchData()\n    fetchKelas()\n  }, [])\n  const fetchKelas = async () => {\n    let response = await fetch(`${REST_URL}/pelatihan`)\n    response = await response.json()\n    setKelas(response)\n  }\n  const fetchData = async () => {\n    let response = await fetch(`${REST_URL}/jadwal`)\n    response = await response.json()\n    setData(response)\n  }\n  const tambahData = () => {\n    showModal(true)\n    setDetail({ active: 1 })\n  }\n  const editData = (index) => {\n    showModal(true)\n    setDetail(data[index])\n  }\n  const deleteData = async (index) => {\n    const { id, pelatihan } = data[index]\n    const confirmed = window.confirm(`Apakah anda yakin menghapus jadwal ${pelatihan}?`)\n    if (confirmed) {\n      await axios.delete(`${REST_URL}/jadwal/${id}`)\n      showModal(false)\n      fetchData()\n    }\n  }\n  const onSubmit = async (e) => {\n    console.log('submit', detail)\n    try {\n      e.preventDefault()\n      if (!detail.pelatihan) {\n        return toast.error('Pilih kelas!')\n      }\n      let { data } = await axios.post(`${REST_URL}/jadwal`, detail)\n      toast.success(data.message)\n      showModal(false)\n      fetchData()\n    } catch (error) {\n      toast.error(error.message)\n    }\n  }\n  const columns = [\n    {\n      Header: '', accessor: 'id', width: 110,\n      Cell: props => {\n        return <div>\n          <button className=\"btn px-2 py-0 text-success\" onClick={() => editData(props.index)}><IoMdCreate /></button>\n          <button className=\"btn px-2 py-0 text-danger\" onClick={() => deleteData(props.index)}><IoMdTrash /></button>\n        </div>\n      }\n    },\n    { Header: 'Kelas', accessor: 'pelatihan', width: 100 },\n    { Header: 'Hari', accessor: 'hari', width: 100 },\n    { Header: 'Tanggal', accessor: 'tanggal', width: 200 },\n    {\n      Header: 'Active', accessor: 'active', width: 200, Cell: props =>\n        <div className=\"text-center\">{props.value ? <IoMdCheckmark className=\"text-success\" /> : <IoMdClose className=\"text-danger\" />}</div>\n    },\n\n  ]\n  const pagination = {\n    limit: 10\n  }\n  return (\n    <Container className='mt-4'>\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"bg-primary\">\n              <big className=\"text-white\">Jadwal Pelatihan</big>\n              <Button variant=\"success\" className=\"float-right\" onClick={() => tambahData()} >Tambah Baru</Button>\n            </Card.Header>\n            <ReactTable\n              data={data}\n              columns={columns}\n              minRows={pagination.limit}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Modal show={show} onHide={() => showModal(false)} size=\"lg\">\n        <Form onSubmit={onSubmit}>\n          <Modal.Header closeButton>\n            <Modal.Title>{detail ? detail.name : 'Data Pelatihan'}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form.Group as={Row}>\n              <Form.Label column='sm' sm='3'>Kelas<span className='text-danger'>*</span></Form.Label>\n              <Col sm='9'>\n                <Select\n                  className='p-0 form-control-sm'\n                  placeholder='Pilih kelas'\n                  options={kelas}\n                  value={[{ nama: detail.pelatihan, deskripsi: detail.pelatihan }]}\n                  onChange={(option) => {\n                    detail.pelatihan = option.nama\n                    setDetail(Object.assign({}, detail))\n                  }}\n                  getOptionLabel={option => option.deskripsi}\n                  getOptionValue={option => option.nama}\n                  required={true}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' sm='3'>Tanggal<span className='text-danger'>*</span></Form.Label>\n              <Col sm='3'>\n                <DatePicker\n                  // showTimeSelect\n                  // timeFormat=\"HH:mm\"\n                  dateFormat=\"yyyy-MM-dd HH:mm\"\n                  selected={detail.tanggal ? dayjs(detail.tanggal)['$d'] : ''}\n                  onChange={(tgl) => {\n                    detail.tanggal = dayjs(tgl).format('YYYY-MM-DD HH:mm:ss')\n                    detail.hari = days[dayjs(detail.tanggal).format('d')]\n                    setDetail(Object.assign({}, detail))\n                  }}\n                  injectTimes={[9, 20]}\n                  timeIntervals={15}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' sm='3'>Hari<span className='text-danger'>*</span></Form.Label>\n              <Col sm='3'>\n                <Form.Control\n                  className=\"capitalize \" size='sm' type='text' name='hari'\n                  value={detail.hari || ''} readOnly\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n              <Form.Label column='sm' sm='3'>Active<span className='text-danger'>*</span></Form.Label>\n              <Col sm='3'>\n                <Form.Check type=\"switch\" id=\"switch-status\" label=\"Active\"\n                  checked={detail.active ? true : false}\n                  onChange={e => {\n                    detail.active = e.target.checked ? 1 : 0\n                    setDetail(Object.assign({}, detail))\n                  }}\n                />\n              </Col>\n            </Form.Group>\n\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\"> Save Changes </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\n\nimport './App.scss'\nimport NotFound from 'pages/404'\nimport Header from 'components/header'\nimport Home from 'pages/home'\nimport Biodata from 'pages/biodata'\nimport Pembayaran from 'pages/pembayaran'\nimport Konfirmasi from 'pages/konfirmasi'\nimport Login from 'pages/login'\nimport Admin from 'admin/pendaftaran'\nimport Pelatihan from 'admin/pelatihan'\nimport Jadwal from 'admin/jadwal'\n\nconst AppRoute = ({ component: Component, ...rest }) => {\n  return <Route\n    {...rest} render={props => (\n      <div>\n        <Header />\n        <Component {...props} />\n      </div>\n    )}\n  />\n}\n\nconst AdminRoute = ({ component: Component, ...rest }) => {\n  const auth = useSelector(state => state.auth)\n  if (auth) {\n    return <AppRoute {...rest} component={Component} />\n  } else {\n    return <Route {...rest} render={props => <Redirect to={{ pathname: '/login', from: props.location }} />} />\n  }\n}\n\nclass AuthRouter extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <ToastContainer />\n        <Switch>\n          <AppRoute exact path='/' component={Home} />\n          <AppRoute path='/biodata' component={Biodata} />\n          <AppRoute path='/pembayaran' component={Pembayaran} />\n          <AppRoute path='/konfirmasi' component={Konfirmasi} />\n          <Route path='/login' component={Login} />\n\n          <AdminRoute path='/admin/pelatihan' component={Pelatihan} />\n          <AdminRoute path='/admin/jadwal' component={Jadwal} />\n          <AdminRoute exact path='/admin' component={Admin} />\n          <Route path='/404' component={NotFound} />\n          <Route render={() => <Redirect to='/404' />} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\nexport default AuthRouter\n","const INITIAL_STATE = {\n  auth: null,\n  jadwalTerpilih: {},\n  pelatihanTerpilih: {},\n  biodataPeserta: {},\n  pendaftaran: {}\n}\n\n// REDUCERS\nexport const rootReducer = (state = INITIAL_STATE, { type, data }) => {\n  switch (type) {\n    case 'LOGIN':\n      return Object.assign({}, state, { auth: data })\n    case 'LOGOUT':\n      return Object.assign({}, state, { auth: null })\n    case 'SET_JADWAL':\n      return Object.assign({}, state, { jadwalTerpilih: data })\n    case 'SET_PELATIHAN':\n      return Object.assign({}, state, { pelatihanTerpilih: data })\n    case 'SET_BIODATA':\n      return Object.assign({}, state, { biodataPeserta: data })\n    case 'KONFIRMASI':\n      return Object.assign({}, state, { pendaftaran: data })\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport 'react-toastify/dist/ReactToastify.css'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-table-v6/react-table.css'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport App from './App'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n// import logger from 'redux-logger'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { rootReducer } from './store.js'\n\nconst persistedReducer = persistReducer({ key: 'root', storage }, rootReducer)\nconst middleware = composeWithDevTools(applyMiddleware(thunk))\nconst store = createStore(persistedReducer, middleware)\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n  ,\n  document.getElementById('root')\n)\n\n// unregister() to register() below. Note this comes with some pitfalls.\nserviceWorker.unregister()\n"],"sourceRoot":""}